# ---------------------------------- Domain -----------------------
domibus_c3dom2.domain.title=domibus_c3dom2
# ---------------------------------- GUI -------------------------

# The title shown in the Tab of Admin Console (default value: "Domibus")
domibus_c3dom2.domibus.UI.title.name=domibus_c3dom2

# ---------------------------------- Keystore/Truststore -----------------------

#The location of the keystore
domibus_c3dom2.domibus.security.keystore.location=${domibus.config.location}/keystores/gateway_keystore_dom2.jks

#The type of the used keystore
domibus_c3dom2.domibus.security.keystore.type=jks

#The password used to load the keystore
domibus_c3dom2.domibus.security.keystore.password=test123

#Private key
#The alias from the keystore of the private key
domibus_c3dom2.domibus.security.key.private.alias=domibus_c3dom2_gw

#The private key password
domibus_c3dom2.domibus.security.key.private.password=test123

#Truststore
#The location of the truststore
domibus_c3dom2.domibus.security.truststore.location=${domibus.config.location}/keystores/gateway_truststore_dom2.jks

#Type of the used truststore
domibus_c3dom2.domibus.security.truststore.type=jks

#The password used to load the trustStore
domibus_c3dom2.domibus.security.truststore.password=test123

# ---------------------------------- Database ----------------------------------

domibus_c3dom2.domibus.database.schema=domibus_c3dom2_bugfix

# ---------------------------------- Security ----------------------------------
#To activate security set this to false
#domibus.auth.unsecureLoginAllowed=false

#Number of console login attempt before the user is deactivated (default 5)
#domibus_c3dom2.domibus.console.login.maximum.attempt=5

#Time in seconds for a suspended user to be reactivated. (1 hour per default if property is not set, if 0 the user will not be reactivated)
#domibus_c3dom2.domibus.console.login.suspension.time=3600

#Cron job that determines the interval at which the system checks for account to be reactivated.
#domibus_c3dom2.domibus.account.unlock.cron=0 0 0/1 * * ?

#When a certificate is about to expires the system will log a warning. The warning will appear as from the expiration date - the offset in days.
#domibus_c3dom2.domibus.certificate.revocation.offset=15

#Cron expression that specifies the frequence of the certificate revocation check.
#domibus_c3dom2.domibus.certificate.check.cron=0 0 0/1 * * ?

# ---------------------------------- Payload -----------------------------------

#It is possible to configure Domibus to save the message payloads on the file system instead of the database. This setting is recommended when exchanging payloads bigger than 30MB.
#In order to enable the file system storage please configure the following property, it is the location on the file system where the payloads will be saved.
#Remark:
#In a cluster configuration the file system storage needs to be accessible by all the nodes from the cluster.
#domibus_c3dom2.domibus.attachment.storage.location=your_file_system_location

# ---------------------------------- Message -----------------------------------

#The suffix of the messageId generated by this instance of domibus. Schema is:  ${UUID}@${SUFFIX}
#domibus_c3dom2.domibus.msh.messageid.suffix=domibus_domibus_c3dom2.eu

# ---------------------------------- Retry -------------------------------------

#Retry Worker execution interval as a cron expression
#domibus_c3dom2.domibus.msh.retry.cron=0 0 0/1 * * ?

#Timeout tolerance for retry messages (in miliseconds). Scheduled retries that, due to any reason, were not performed within this period will be timeout
#domibus_c3dom2.domibus.msh.retry.tolerance=10800000

# ---------------------------------- Dynamic Discovery -------------------------

#The SML zone
#domibus_c3dom2.domibus.smlzone=acc.edelivery.tech.ec.europa.eu

#The dynamic discovery client to be used for the dynamic process. Possible values: OASIS and PEPPOL. Defaults to OASIS.
#domibus_c3dom2.domibus.dynamic.discovery.client.specification=OASIS

#Specifies the PEPPOL dynamic discovery client mode: PRODUCTION or TEST mode. Defaults to TEST.
#domibus_c3dom2.domibus.dynamic.discovery.peppolclient.mode=TEST

#Apart from validating response of signer certificates against the truststore, the Oasis Dynamic Discovery Client gives
#the possibility to add (optional) a regular expression to validate any certificate metadata related to the subject of the signer certificate.
#domibus_c3dom2.domibus.dynamic.discovery.oasisclient.regexCertificateSubjectValidation="^.*EHEALTH_SMP.*$"

# ---------------------------------- JMS ---------------------------------------

#This queue is the entry point for messages to be sent to Domibus via the JMS plugin
#domibus_c3dom2.domibus.backend.jmsInQueue=domibus.backend.jms.inQueue

#Domibus internal queue used for dispatching the pull requests
#domibus_c3dom2.domibus.jms.queue.pull=domibus.internal.pull.queue

#The maximum number of pending messages to be listed from the backend notification queue. Setting this property is expected to avoid timeouts due to huge resultsets being served.
#Setting this property to zero returns all pending messages
#domibus_c3dom2.domibus.listPendingMessages.maxCount=500

# ---------------------------------- Validation --------------------------------

#If activated Domibus will verify before sending a User Message if the receiver's certificate is valid and not revoked. If the receiver's certificate is not valid or it has been revoked
#Domibus will not send the message and it will mark it as SEND_FAILURE (default is true)
#domibus_c3dom2.domibus.receiver.certificate.validation.onsending=true

#If activated Domibus will verify before sending a User Message if his own certificate is valid and not revoked. If the certificate is not valid or it has been revoked
#Domibus will not send the message and it will mark it as SEND_FAILURE (default is true)
#domibus_c3dom2.domibus.sender.certificate.validation.onsending=true

#If activated Domibus will verify before receiving a User Message if the sender's certificate is valid and not revoked. If the certificate is not valid or it has been revoked
#Domibus will not accept the message (default is true)
#domibus_c3dom2.domibus.sender.certificate.validation.onreceiving=true

#If activated Domibus will verify before receiving a User Message if the sender's party name is part of the CN in the sender's certificate. If not,
#Domibus will not accept the message (default is false)
#domibus_c3dom2.domibus.sender.trust.validation.onreceiving = false

# ---------------------------------- Dispatcher --------------------------------

#Timeout values for communication between the access points
#ConnectionTimeOut - Specifies the amount of time, in milliseconds, that the consumer will attempt to establish a connection before it times out. 0 is infinite.
#domibus_c3dom2.domibus.dispatcher.connectionTimeout=240000

#ReceiveTimeout - Specifies the amount of time, in milliseconds, that the consumer will wait for a response before it times out. 0 is infinite.
#domibus_c3dom2.domibus.dispatcher.receiveTimeout=240000

#Allows chunking when sending messages to other Access Points
#domibus_c3dom2.domibus.dispatcher.allowChunking=true

#If domibus.dispatcher.allowChunking is true, this property sets the threshold at which messages start getting chunked(in bytes). Messages under this limit do not get chunked. Defaults to 100 MB.
#domibus_c3dom2.domibus.dispatcher.chunkingThreshold=104857600

#Specify concurrency limits via a "lower-upper" String, e.g. "5-10", or a simple upper limit String, e.g. "10" (the lower limit will be 1 in this case)
#when sending messages to other Access Points
#domibus_c3dom2.domibus.dispatcher.concurency=5-20

#Cache the dispatcher clients used for communication between the access points. Defaults to false.
#domibus_c3dom2.domibus.dispatcher.cacheable=false

# ---------------------------------- Retention ---------------------------------

#Cron expression used for configuring the retention worker scheduling. The retention worker deletes the expired messages(downloaded and not-downloaded).
#domibus_c3dom2.domibus.retentionWorker.cronExpression=0 0 0/1 * * ?

#Uncomment the following line if you need to tweak the maximum downloaded messages to be deleted by the retention worker. Defaults to 50.
#domibus_c3dom2.message.retention.downloaded.max.delete=50
#Uncomment the following line if you need to tweak the maximum not-downloaded messages to be deleted by the retention worker. Defaults to 50.
#domibus_c3dom2.message.retention.not_downloaded.max.delete=50

# ---------------------------------- Various -----------------------------------

#If disabled, Domibus will not notify the plugins when the state of the User Message changes. Defaults to true.
#domibus_c3dom2.domibus.plugin.notification.active=true

#If disabled, Domibus will not save the non repudiation audit data. Defaults to true.
#domibus_c3dom2.domibus.nonrepudiation.audit.active=true

#Cron expression used for configuring the message puller scheduling.
#domibus_c3dom2.domibus.msh.pull.cron=0 0 0/1 * * * ?

#The list of mime-types that will not be compressed (in outgoing messages) even if compression is turned on for the given message.
#domibus_c3dom2.compressionBlacklist=application/vnd.etsi.asic-s+zip,image/jpeg

#Whether to delete the message payload on send failure. Defaults to false (the administrator can put the message back in the send queue).
#domibus_c3dom2.domibus.sendMessage.failure.delete.payload=false

#If disabled, Domibus will not save the message attempt details when there is a failure sending a message. Defaults to true.
#domibus_c3dom2.domibus.sendMessage.attempt.audit.active=true

#Should unrecoverable errors should be retried or not
#domibus_c3dom2.domibus.dispatch.ebms.error.unrecoverable.retry=true
