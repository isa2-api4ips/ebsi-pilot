<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1c29d1fb-f8ae-4ddb-ac43-1469a15001ec" activeEnvironment="Default" name="TESTS_JMS" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@hermesConfig">C:\ec</con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="9581111c-248c-4085-bf9f-dc452577042f" wsaVersion="NONE" name="BackendService_1_1SoapBinding" type="wsdl" bindingName="{http://org.ecodex.backend/1_1/}BackendService_1_1SoapBinding" soapVersion="1_2" anonymous="optional" definition="http://localhost:8080/domibus/services/backend?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/domibus/services/backend?wsdl"><con:part><con:url>http://localhost:8080/domibus/services/backend?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="BackendService_1_1" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://org.ecodex.backend/1_1/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:tns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/">
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xsd:annotation>
        <xsd:appinfo>Schema for Domibus messages' headers submission</xsd:appinfo>
        <xsd:documentation xml:lang="en">This schema defines an XML subset of ebMS-3 headers which is used to validate messages submitted to Domibus
            through WS plugin.</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="Messaging" type="Messaging"/>
      <xsd:complexType name="Messaging">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="UserMessage" type="UserMessage"/>
        </xsd:sequence>
        <xsd:attribute name="mustUnderstand" type="xsd:boolean" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="UserMessage">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessageInfo" type="MessageInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyInfo" type="PartyInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="CollaborationInfo" type="CollaborationInfo"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="MessageProperties" type="tns:MessageProperties"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="PayloadInfo" type="tns:PayloadInfo"/>
        </xsd:all>
        <xsd:attribute name="mpc" type="xsd:anyURI" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="MessageInfo">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="0" name="Timestamp" type="xsd:dateTime"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessageId" type="tns:max255-non-empty-string"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="RefToMessageId" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyInfo">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="From" type="tns:From"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="To" type="tns:To"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="PartyId">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="From">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyId" type="tns:PartyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="To">
        <xsd:all>
          <xsd:element maxOccurs="1" minOccurs="1" name="PartyId" type="tns:PartyId"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Role" type="tns:max255-non-empty-string"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="CollaborationInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="AgreementRef" type="tns:AgreementRef"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Service" type="tns:Service"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="Action" type="xsd:token"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="ConversationId" type="xsd:token"/>
        </xsd:all>
      </xsd:complexType>
      <xsd:complexType name="Service">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="AgreementRef">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
            <xsd:attribute name="pmode" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PayloadInfo">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="PartInfo" type="tns:PartInfo"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PartInfo">
        <xsd:all>
          <xsd:element minOccurs="0" name="Schema" type="Schema"/>
          <xsd:element maxOccurs="1" minOccurs="0" name="Description" type="tns:Description"/>
          <xsd:element minOccurs="0" name="PartProperties" type="tns:PartProperties"/>
        </xsd:all>
        <xsd:attribute name="href" type="xsd:token" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="Property">
        <xsd:simpleContent>
          <xsd:extension base="tns:max1024-non-empty-string">
            <xsd:attribute name="name" type="tns:max255-non-empty-string" use="required"/>
            <xsd:attribute name="type" type="tns:max255-non-empty-string" use="optional"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="PartProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="tns:Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="MessageProperties">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" name="Property" type="Property"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Schema">
        <xsd:attribute name="location" type="xsd:anyURI" use="optional"/>
        <xsd:attribute name="version" type="tns:max255-non-empty-string" use="optional"/>
        <xsd:attribute name="namespace" type="tns:max255-non-empty-string" use="optional"/>
      </xsd:complexType>
      <xsd:complexType name="Description">
        <xsd:simpleContent>
          <xsd:extension base="tns:max255-non-empty-string">
            <xsd:attribute ref="xml:lang" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="max1024-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="1024"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.ecodex.backend/1_1/" xmlns:ns1="http://www.w3.org/2005/05/xmlmime">
      <xsd:import namespace="http://www.w3.org/2005/05/xmlmime"/>
      <xsd:simpleType name="max255-non-empty-string">
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="FaultDetail">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="code" type="xsd:string"/>
            <xsd:element name="message" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" nillable="true" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="retrieveMessageResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="listPendingMessagesRequest" nillable="false" type="xsd:anyType"/>
      <xsd:element name="listPendingMessagesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageErrorsRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="messageStatusRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitRequest">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="bodyload" type="tns:LargePayloadType"/>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="payload" nillable="true" type="tns:LargePayloadType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="submitResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="messageID" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="PayloadType">
        <xsd:simpleContent>
          <xsd:extension base="ns1:base64Binary">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:complexType name="LargePayloadType">
        <xsd:sequence>
          <xsd:element name="value" ns1:expectedContentTypes="application/octet-stream" type="xsd:base64Binary"/>
        </xsd:sequence>
        <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
        <xsd:attribute name="contentType" type="xsd:string"/>
      </xsd:complexType>
      <xsd:complexType name="errorResultImpl">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="errorCode" type="tns:errorCode"/>
          <xsd:element minOccurs="0" name="errorDetail" type="xsd:string"/>
          <xsd:element minOccurs="0" name="messageInErrorId" type="xsd:string"/>
          <xsd:element minOccurs="0" name="mshRole" type="tns:mshRole"/>
          <xsd:element minOccurs="0" name="notified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="timestamp" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PayloadURLType">
        <xsd:simpleContent>
          <xsd:extension base="xsd:string">
            <xsd:attribute name="payloadId" type="xsd:token" use="required"/>
          </xsd:extension>
        </xsd:simpleContent>
      </xsd:complexType>
      <xsd:simpleType name="messageStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="READY_TO_SEND"/>
          <xsd:enumeration value="READY_TO_PULL"/>
          <xsd:enumeration value="BEING_PULLED"/>
          <xsd:enumeration value="SEND_ENQUEUED"/>
          <xsd:enumeration value="SEND_IN_PROGRESS"/>
          <xsd:enumeration value="WAITING_FOR_RECEIPT"/>
          <xsd:enumeration value="ACKNOWLEDGED"/>
          <xsd:enumeration value="ACKNOWLEDGED_WITH_WARNING"/>
          <xsd:enumeration value="SEND_ATTEMPT_FAILED"/>
          <xsd:enumeration value="SEND_FAILURE"/>
          <xsd:enumeration value="NOT_FOUND"/>
          <xsd:enumeration value="WAITING_FOR_RETRY"/>
          <xsd:enumeration value="RECEIVED"/>
          <xsd:enumeration value="RECEIVED_WITH_WARNINGS"/>
          <xsd:enumeration value="DELETED"/>
          <xsd:enumeration value="DOWNLOADED"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="errorCode">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="EBMS_0001"/>
          <xsd:enumeration value="EBMS_0002"/>
          <xsd:enumeration value="EBMS_0003"/>
          <xsd:enumeration value="EBMS_0004"/>
          <xsd:enumeration value="EBMS_0005"/>
          <xsd:enumeration value="EBMS_0006"/>
          <xsd:enumeration value="EBMS_0007"/>
          <xsd:enumeration value="EBMS_0008"/>
          <xsd:enumeration value="EBMS_0009"/>
          <xsd:enumeration value="EBMS_0010"/>
          <xsd:enumeration value="EBMS_0011"/>
          <xsd:enumeration value="EBMS_0101"/>
          <xsd:enumeration value="EBMS_0102"/>
          <xsd:enumeration value="EBMS_0103"/>
          <xsd:enumeration value="EBMS_0201"/>
          <xsd:enumeration value="EBMS_0202"/>
          <xsd:enumeration value="EBMS_0301"/>
          <xsd:enumeration value="EBMS_0302"/>
          <xsd:enumeration value="EBMS_0303"/>
          <xsd:enumeration value="EBMS_0020"/>
          <xsd:enumeration value="EBMS_0021"/>
          <xsd:enumeration value="EBMS_0022"/>
          <xsd:enumeration value="EBMS_0023"/>
          <xsd:enumeration value="EBMS_0030"/>
          <xsd:enumeration value="EBMS_0031"/>
          <xsd:enumeration value="EBMS_0040"/>
          <xsd:enumeration value="EBMS_0041"/>
          <xsd:enumeration value="EBMS_0042"/>
          <xsd:enumeration value="EBMS_0043"/>
          <xsd:enumeration value="EBMS_0044"/>
          <xsd:enumeration value="EBMS_0045"/>
          <xsd:enumeration value="EBMS_0046"/>
          <xsd:enumeration value="EBMS_0047"/>
          <xsd:enumeration value="EBMS_0048"/>
          <xsd:enumeration value="EBMS_0049"/>
          <xsd:enumeration value="EBMS_0050"/>
          <xsd:enumeration value="EBMS_0051"/>
          <xsd:enumeration value="EBMS_0052"/>
          <xsd:enumeration value="EBMS_0053"/>
          <xsd:enumeration value="EBMS_0054"/>
          <xsd:enumeration value="EBMS_0055"/>
          <xsd:enumeration value="EBMS_0060"/>
          <xsd:enumeration value="EBMS_0065"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:simpleType name="mshRole">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SENDING"/>
          <xsd:enumeration value="RECEIVING"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType final="#all" name="errorResultImplArray">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:errorResultImpl"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="getStatusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="statusRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getStatusResponse" nillable="true" type="tns:messageStatus"/>
      <xsd:element name="getErrorsRequest" nillable="true">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="messageID" type="tns:max255-non-empty-string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getMessageErrorsResponse" nillable="true" type="tns:errorResultImplArray"/>
    </xsd:schema>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:annotation>
        <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         The xml:id specification is not yet a W3C Recommendation,
         but this attribute is included here to facilitate experimentation
         with the mechanisms it proposes.  Note that it is _not_ included
         in the specialAttrs attribute group.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
      </xs:annotation>
      <xs:annotation>
        <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2005/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2005/08/xml.xsd will not change.</xs:documentation>
      </xs:annotation>
      <xs:attribute name="lang">
        <xs:annotation>
          <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union memberTypes="xs:language">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value=""/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="space">
        <xs:simpleType>
          <xs:restriction base="xs:NCName">
            <xs:enumeration value="default"/>
            <xs:enumeration value="preserve"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id" type="xs:ID">
        <xs:annotation>
          <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup name="specialAttrs">
        <xs:attribute ref="xml:base"/>
        <xs:attribute ref="xml:lang"/>
        <xs:attribute ref="xml:space"/>
      </xs:attributeGroup>
    </xs:schema>
    <xs:schema targetNamespace="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xmime="http://www.w3.org/2005/05/xmlmime">
      <xs:attribute name="contentType">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="3"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="expectedContentTypes" type="xs:string"/>
      <xs:complexType name="base64Binary">
        <xs:simpleContent>
          <xs:extension base="xs:base64Binary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="hexBinary">
        <xs:simpleContent>
          <xs:extension base="xs:hexBinary">
            <xs:attribute ref="xmime:contentType"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getStatusResponse">
    <wsdl:part element="tns:getStatusResponse" name="getStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessagesResponse">
    <wsdl:part element="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrorsResponse">
    <wsdl:part element="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitMessageResponse">
    <wsdl:part element="tns:submitResponse" name="submitResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="RetrieveMessageFault">
    <wsdl:part element="tns:FaultDetail" name="RetrieveMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMessageErrors">
    <wsdl:part element="tns:getErrorsRequest" name="getErrorsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatus">
    <wsdl:part element="tns:statusRequest" name="statusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="listPendingMessages">
    <wsdl:part element="tns:listPendingMessagesRequest" name="listPendingMessagesRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SubmitMessageFault">
    <wsdl:part element="tns:FaultDetail" name="SubmitMessageFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="StatusFault">
    <wsdl:part element="tns:FaultDetail" name="StatusFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="submitMessage">
    <wsdl:part element="tns:submitRequest" name="submitRequest"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrieveMessage">
    <wsdl:part element="tns:retrieveMessageRequest" name="retrieveMessageRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="retrieveMessageResponse">
    <wsdl:part element="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:part>
    <wsdl:part element="ns1:Messaging" name="ebMSHeaderInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="BackendInterface">
    <wsdl:operation name="listPendingMessages">
      <wsdl:input message="tns:listPendingMessages" name="listPendingMessages"></wsdl:input>
      <wsdl:output message="tns:listPendingMessagesResponse" name="listPendingMessagesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <wsdl:input message="tns:getMessageErrors" name="getMessageErrors"></wsdl:input>
      <wsdl:output message="tns:getMessageErrorsResponse" name="getMessageErrorsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <wsdl:input message="tns:getStatus" name="getStatus"></wsdl:input>
      <wsdl:output message="tns:getStatusResponse" name="getStatusResponse"></wsdl:output>
      <wsdl:fault message="tns:StatusFault" name="StatusFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitMessage">
      <wsdl:input message="tns:submitMessage" name="submitMessage"></wsdl:input>
      <wsdl:output message="tns:submitMessageResponse" name="submitMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:SubmitMessageFault" name="SubmitMessageFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage" parameterOrder="retrieveMessageRequest retrieveMessageResponse ebMSHeaderInfo">
      <wsdl:input message="tns:retrieveMessage" name="retrieveMessage"></wsdl:input>
      <wsdl:output message="tns:retrieveMessageResponse" name="retrieveMessageResponse"></wsdl:output>
      <wsdl:fault message="tns:RetrieveMessageFault" name="RetrieveMessageFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BackendService_1_1SoapBinding" type="tns:BackendInterface">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="listPendingMessages">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="listPendingMessages">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="listPendingMessagesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMessageErrors">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getMessageErrors">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMessageErrorsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStatus">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="getStatus">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatusResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="StatusFault">
        <soap12:fault name="StatusFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="submitMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="submitMessage">
        <soap12:header message="tns:submitMessage" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="submitRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="submitMessageResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SubmitMessageFault">
        <soap12:fault name="SubmitMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="retrieveMessage">
      <soap12:operation soapAction="" style="document"/>
      <wsdl:input name="retrieveMessage">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="retrieveMessageResponse">
        <soap12:header message="tns:retrieveMessageResponse" part="ebMSHeaderInfo" use="literal"></soap12:header>
        <soap12:body parts="retrieveMessageResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RetrieveMessageFault">
        <soap12:fault name="RetrieveMessageFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BackendService_1_1">
    <wsdl:port binding="tns:BackendService_1_1SoapBinding" name="BACKEND_PORT">
      <soap12:address location="http://localhost:8080/domibus/services/backend"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:endpoint>http://localhost:8080/domibus/services/backend</con:endpoint><con:endpoint>http://wltdgt02.cc.cec.eu.int:1063/domibus/services/backend</con:endpoint></con:endpoints><con:operation id="767cb481-8b7d-45ef-957f-e823696a27be" isOneWay="false" action="" name="getMessageErrors" bindingOperationName="getMessageErrors" type="Request-Response" outputName="getMessageErrorsResponse" inputName="getMessageErrors" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="f3563058-db2b-4135-a5e0-ddcfb8386683" isOneWay="false" action="" name="listPendingMessages" bindingOperationName="listPendingMessages" type="Request-Response" outputName="listPendingMessagesResponse" inputName="listPendingMessages" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation id="854782c9-2abc-4349-93f6-240147556428" isOneWay="false" action="" name="submitMessage" bindingOperationName="submitMessage" type="Request-Response" outputName="submitMessageResponse" inputName="submitMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f133f98-0a64-4fae-bcf5-2e64d1a04e16" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header>
      <ns:Messaging mustUnderstand="?">
         </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e984a797-da44-4ed9-88e6-118cdebcc075" name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header>\r
      <ns:Messaging mustUnderstand="?">\r
         <!--Optional:-->\r
         <ns:UserMessage mpc="?">\r
            <!--You may enter the following 5 items in any order-->\r
            <!--Optional:-->\r
            <ns:MessageInfo>\r
               <!--You may enter the following 3 items in any order-->\r
               <!--Optional:-->\r
               <ns:Timestamp>?</ns:Timestamp>\r
               <!--Optional:-->\r
               <ns:MessageId>?</ns:MessageId>\r
               <!--Optional:-->\r
               <ns:RefToMessageId>?</ns:RefToMessageId>\r
            </ns:MessageInfo>\r
            <ns:PartyInfo>\r
               <!--You may enter the following 2 items in any order-->\r
               <ns:From>\r
                  <!--You may enter the following 2 items in any order-->\r
                  <ns:PartyId type="?">?</ns:PartyId>\r
                  <ns:Role>?</ns:Role>\r
               </ns:From>\r
               <!--Optional:-->\r
               <ns:To>\r
                  <!--You may enter the following 2 items in any order-->\r
                  <ns:PartyId type="?">?</ns:PartyId>\r
                  <ns:Role>?</ns:Role>\r
               </ns:To>\r
            </ns:PartyInfo>\r
            <ns:CollaborationInfo>\r
               <!--You may enter the following 4 items in any order-->\r
               <!--Optional:-->\r
               <ns:AgreementRef type="?" pmode="?">?</ns:AgreementRef>\r
               <ns:Service type="?">?</ns:Service>\r
               <ns:Action>?</ns:Action>\r
               <!--Optional:-->\r
               <ns:ConversationId>?</ns:ConversationId>\r
            </ns:CollaborationInfo>\r
            <ns:MessageProperties>\r
               <!--1 or more repetitions:-->\r
               <ns:Property name="?" type="?">?</ns:Property>\r
            </ns:MessageProperties>\r
            <ns:PayloadInfo>\r
               <!--1 or more repetitions:-->\r
               <ns:PartInfo href="?">\r
                  <!--Optional:-->\r
                  <ns:PartProperties>\r
                     <!--1 or more repetitions:-->\r
                     <ns:Property name="?" type="?">?</ns:Property>\r
                  </ns:PartProperties>\r
               </ns:PartInfo>\r
            </ns:PayloadInfo>\r
         </ns:UserMessage>\r
      </ns:Messaging>\r
   </soap:Header>\r
   <soap:Body>\r
      <_1:submitRequest>\r
         <!--Optional:-->\r
         <bodyload payloadId="?" contentType="?">\r
            <value>cid:527230167435</value>\r
         </bodyload>\r
         <!--Zero or more repetitions:-->\r
         <payload payloadId="?" contentType="?">\r
            <value>cid:993829285671</value>\r
         </payload>\r
      </_1:submitRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="fa93f66f-0dee-457b-9182-2f3dac23e65c" isOneWay="false" action="" name="retrieveMessage" bindingOperationName="retrieveMessage" type="Request-Response" outputName="retrieveMessageResponse" inputName="retrieveMessage" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8955e910-8ad0-4f6a-84e5-e5305aa8bda4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>?</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/></con:call><con:call id="e7667214-6a86-430e-a470-7a5c7d463ed5" name="Request 2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>?</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f3c6fe64-3e6d-4241-b6ef-c2238e21fd0b" isOneWay="false" action="" name="getStatus" bindingOperationName="getStatus" type="Request-Response" outputName="getStatusResponse" inputName="getStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9e9c4dbc-0255-4c97-bd4e-59e96bee396d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>?</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="4105cbbc-1cb0-42ac-b367-be4eb6c1ce49" wadlVersion="http://wadl.dev.java.net/2009/02" name="TESTS_JMS" type="rest" definitionUrl="jmsSer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints/></con:interface><con:testSuite id="9da56030-983e-4642-ba96-4a10d78dd7f7" name="Administration"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Clean Database" searchProperties="true" id="16662c35-1a24-43a3-bdf4-6a9388457083">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Clean All" id="985ea521-2524-4ab9-860e-3532f715c05b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDatabaseAll()
test.finalize()
</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-tomcat-tomcat" searchProperties="true" id="8b902f72-7e0d-4389-8247-f9bf6c6495e4">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="91058f49-9963-487d-ad00-3b41755ab1fb"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus")
// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus")
// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue","dbUser":"root","dbPassword":"root"}, 
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red","dbUser":"root","dbPassword":"root"}, 
"thirdDefault":{"site":"third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green","dbUser":"root","dbPassword":"root"}, 
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom1","dbUser":"root","dbPassword":"root"}, 
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom2","dbUser":"root","dbPassword":"root"}, 
"C2Dom3":{"site":"C2","domainName":"domibus_C2Dom3","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom3","dbUser":"root","dbPassword":"root"},  
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom1","dbUser":"root","dbPassword":"root"},  
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom2","dbUser":"root","dbPassword":"root"},  
"C3Dom3":{"site":"C3","domainName":"domibus_C3Dom3","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom3","dbUser":"root","dbPassword":"root"} }''')
// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="38903868-8421-4031-b71c-7842652be2f1"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log)
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-localhost-tomcat-tomcat-bugfix" searchProperties="true" id="a48ac78b-5ee2-4009-a4e7-7e9f8d540808">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="bda05f2f-c032-4b3a-96bb-a7422be0e0b2"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus_blue_alt")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root")
// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus_red_alt")
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root")
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root")
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
log.info "Update done.";

</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="a767c721-e751-4694-b6b8-7db7b6b58be4"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log)
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-weblogic-tomcat" searchProperties="true" id="9e2a9058-da2e-4207-831b-408e15fc1da4">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="f9c5c95a-a152-4b17-a2f8-63e1bafd2633"><con:settings/><con:config><script>// blue: weblogic (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest1.westeurope.cloudapp.azure.com:7005/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "oracle")
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "oracle.jdbc.OracleDriver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:oracle:thin:@localhost:11521/xe")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "edelivery")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "edelivery")
// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr")
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root")
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "edelCld2017")
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="11ace457-262d-4fbd-88b7-7d5aebcd9503"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\cloud\\weblogic\\blue\\domibus-pmode-blue.xml",context,log)
Domibus.uploadPmode("receiver","default","\\cloud\\weblogic\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="New Set custom properties" id="2e98b03a-9a04-4c89-9578-1deeec4257a3"><con:settings/><con:config><script>
// blue: weblogic (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest4.westeurope.cloudapp.azure.com:7003/domibus-weblogic")
// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus")
// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"oracle","dbDriver":"oracle.jdbc.OracleDriver","dbJdbcUrl":"jdbc:oracle:thin:@localhost:41521/xe","dbUser":"domibus_default","dbPassword":"domibus_default"}, 
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:23306/domibus_default_tomcat","dbUser":"root","dbPassword":"edelCld2017"}, 
}''')
// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "1")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "Update done.";</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-tomcat-tomcat" searchProperties="true" id="0e0da18a-6779-4707-aa0d-54803f635ddd">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="46af3ddc-9660-431f-aea4-a31b5d89f104"><con:settings/><con:config><script>// blue: tomcat (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest1.westeurope.cloudapp.azure.com:9080/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:13306/domtestusr")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "root")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "edelCld2017")
// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr")
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "root")
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "edelCld2017")
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="969211ad-25d7-4867-aa79-e57ef69c4882"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\cloud\\tomcat\\blue\\domibus-pmode-blue.xml",context,log)
Domibus.uploadPmode("receiver","default","\\cloud\\tomcat\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-cloud-wildfly-tomcat" searchProperties="true" id="0cc40727-e6d3-4e3f-a3ac-aaabfdcfd382">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set custom properties" id="5daf8fd6-b640-4ed4-9465-35c82e0b79d1"><con:settings/><con:config><script>// blue: wildfly (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://edeltest2.westeurope.cloudapp.azure.com:8085/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:23306/domibus33wildfly")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbUser", "domibus33wildfly")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "domibus33wildfly")
// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://edeltest2.westeurope.cloudapp.azure.com:9080/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:23306/domtestusr")
testRunner.testCase.testSuite.project.setPropertyValue("redDbUser", "domtestusr")
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "domtestusr")
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="c7a8aa83-4314-4d39-ba87-233d0082e110"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\cloud\\wildfly\\blue\\domibus-pmode-blue.xml",context,log)
Domibus.uploadPmode("receiver","default","\\cloud\\wildfly\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Configuration-setLocalInstallationsPaths" searchProperties="true" id="8c381763-353a-419a-929d-50fff18c227c">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set ec path" id="7e33c304-f766-4008-ac01-0fafb48789eb"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/ec/blue/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/ec/red/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/ec/greenReceiver/domibus/")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set domibus path" id="b2000618-cebb-4147-9137-96806fd9e54b"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/sender/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Dynamic Discovery path PEPPOL" id="b0462cac-e4c1-4ec2-bd13-002c29da77ab"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/senderDynPeppol/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Dynamic Discovery path OASIS" id="c0a255c0-990d-47fc-b9bb-0626111bbf65"><con:settings/><con:config><script>
testRunner.testCase.testSuite.project.setPropertyValue("pathBlue", "C:/domibus/senderDynOasis/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathRed", "C:/domibus/receiver/domibus/")
testRunner.testCase.testSuite.project.setPropertyValue("pathGreen", "C:/domibus/greenReceiver/domibus/")
log.info "Update done.";
</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="aee4aa97-dbbc-4370-bc13-892d16feaf0d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestConnection" searchProperties="true"><con:settings/><con:testStep type="groovy" name="test connection DB" id="13ea1f82-3f63-4977-b2fb-38b88c6faab0" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.openConnection()
log.info "CONNECTION OPENED";
test.closeConnection()
log.info "CONNECTION CLOSED";
test.finalize()</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="882ee6da-dc3d-41b7-a560-c259e3833c9e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start default configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set custom properties" id="570e3f4f-7d5f-4e93-96f1-39ec3eacd314"><con:settings/><con:config><script>// blue: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus")
// red: tomcat (localhost)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus")
// Set DB configurations
testRunner.testCase.testSuite.project.setPropertyValue("allDomainsProperties",'''\
{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue","dbUser":"root","dbPassword":"root"}, 
"C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red","dbUser":"root","dbPassword":"root"}, 
"thirdDefault":{"site":"third","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_green","dbUser":"root","dbPassword":"root"}, 
"C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom1","dbUser":"root","dbPassword":"root"}, 
"C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom2","dbUser":"root","dbPassword":"root"}, 
"C2Dom3":{"site":"C2","domainName":"domibus_C2Dom3","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C2Dom3","dbUser":"root","dbPassword":"root"},  
"C3Dom1":{"site":"C3","domainName":"domibus_C3Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom1","dbUser":"root","dbPassword":"root"},  
"C3Dom2":{"site":"C3","domainName":"domibus_C3Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom2","dbUser":"root","dbPassword":"root"},  
"C3Dom3":{"site":"C3","domainName":"domibus_C3Dom3","domNo":3,"dbType":"mysql","dbDriver":"com.mysql.cj.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_C3Dom3","dbUser":"root","dbPassword":"root"} }''')
// Set third gateway option
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
// Set Multitenancy Modes
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Start Blue-Red" id="5e5ec351-fd1f-48bf-8164-c51974c2e3e7"><con:settings/><con:config><script>// Start 2 Domibus: sender and receiver
Domibus.startSetMSHs(1,1,0,context,log)
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="83a7dce8-242a-4042-92b2-4916c34fb291"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload default PModes Blue-Red" id="574cdbea-2d13-498b-a7f1-282b1ab1e4f2"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log)
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="5b9fc052-2009-41a5-b70e-0f21dc44d889"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload default truststores Blue-Red" id="0312d29f-f769-4d48-b3df-b7629d4d39d0"><con:settings/><con:config><script>// Upload truststores: default truststores (blue for sender and red for receiver)  
Domibus.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log)
Domibus.uploadTruststore("receiver","default","\\red\\gateway_truststore.jks",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="d27094c4-0a10-473b-abc5-572b984c8d04"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to JMS Blue-Red" id="cb6e966f-130d-46cc-9796-ac954f138ffc"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","Jms",context,log)
Domibus.setMessageFilters("receiver","Jms",context,log)
</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>65ecdf7b-e0e2-477b-b020-da4c7fb8c855</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3bc33515-eae2-46e7-a50f-1104a8d1a301</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7aefe4d7-98b5-43b1-8f34-4aa71764de77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b3cb71a7-643e-4018-aeef-06960585f246" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Start 3 gateways configuration" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set custom properties" id="675f3ce8-1ca1-4742-b103-e37a1fb27ec0"><con:settings/><con:config><script>// blue: tomcat (edeltest1)
testRunner.testCase.testSuite.project.setPropertyValue("localUrl", "http://localhost:8080/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseBlue", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverBlue", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlBlue", "jdbc:mysql://localhost:3306/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root")
testRunner.testCase.testSuite.project.setPropertyValue("blueDbPassword", "root")
// red: tomcat (edeltest2)
testRunner.testCase.testSuite.project.setPropertyValue("remoteUrl", "http://localhost:8180/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("databaseRed", "mysql")
testRunner.testCase.testSuite.project.setPropertyValue("driverRed", "com.mysql.cj.jdbc.Driver")
testRunner.testCase.testSuite.project.setPropertyValue("jdbcUrlRed", "jdbc:mysql://localhost:3306/domibus")
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root")
testRunner.testCase.testSuite.project.setPropertyValue("redDbPassword", "root")
testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true")
log.info "Update done.";
</script></con:config></con:testStep><con:testStep type="groovy" name="Start Blue-Red-Green" id="68721198-3073-403d-8bff-6d7720f95d78"><con:settings/><con:config><script>// Start 3 Domibus: sender, receiver and green.
Domibus.startSetMSHs(1,1,1,context,log)
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="b21a74cf-99e6-4664-b9fb-e0905ffa92d2"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes Blue-Red-Green" id="18b8ee27-8c2a-4caf-8227-706511989a34"><con:settings/><con:config><script>// Upload PModes: blue for sender, red for receiver and green for the third Domibus.  
Domibus.uploadPmode("sender","special","\\Threegateways\\blue\\domibus-pmode-blue.xml",context,log)
Domibus.uploadPmode("receiver","special","\\Threegateways\\red\\domibus-pmode-red.xml",context,log)
Domibus.uploadPmode("receivergreen","special","\\Threegateways\\green\\domibus-pmode-green.xml",context,log);</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="8e90787c-886d-41a6-a149-ea70071e6413"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Upload truststores Blue-Red-Green" id="4e237d51-ac39-4dab-9c40-ede4b67ddf34"><con:settings/><con:config><script>// Upload truststores: blue for sender, red for receiver and green for the third Domibus.  
Domibus.uploadTruststore("sender","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log)
Domibus.uploadTruststore("receiver","special","\\Threegateways\\red\\gateway_truststore.jks",context,log)
Domibus.uploadTruststore("receivergreen","special","\\Threegateways\\green\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="9cebac82-b705-4257-a840-fa27ca283204"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to JMS Blue-Red-Green" id="2d86869e-76b7-40e0-b42f-c983047ef8a3"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","Jms",context,log)
Domibus.setMessageFilters("receiver","Jms",context,log)
Domibus.setMessageFilters("receivergreen","Jms",context,log)
</script></con:config></con:testStep><con:tearDownScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8d861779-0a64-417b-b81f-dbaed89dc796</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42781f68-9908-4231-93af-c83bd2d27190</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f10dbea4-cf15-49a7-93b9-ab0ef7752097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="75b4d7ff-fc7f-4c05-bd9b-1cad9c73b2ec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add or change Teardown script" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddToTearDown" id="235fe2c6-ac8e-4b5d-837c-1d73e27fcdc8"><con:settings/><con:config><script>def lineToAdd = "Domibus.reportTestCaseCsv(testRunner, log)"
log.info "START: Amendment tear down sciprts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def td = testCase.getTearDownScript()
  		if (td == null) 
  		{
  			testCase.setTearDownScript(lineToAdd)
  		}
  		else if(!td.contains("Domibus.reportTestCaseCsv")) {
  			def newTearDown = td + System.getProperty("line.separator") + lineToAdd
  			testCase.setTearDownScript(newTearDown)
  		}
 	}
 }
log.info "END: Amendment tear down sciprts"
</script></con:config></con:testStep><con:testStep type="groovy" name="ReplaceTearDownLine" id="6c416335-97de-4b87-8926-101e2a40ee87"><con:settings/><con:config><script>def newLine = System.getProperty("line.separator")
/*testRunner.testCase.testSuite.project.getTestSuiteList().each{
	testsuite -> log.info testsuite.name
}*/
//def oldLineToBeChanged = /(?&lt;!\/)Domibus.reportTestCaseCsv/
//def newLineToBeChanged = "Domibus.reportTestCaseCsv"

def newLineToBeChanged = "Domibus.reportTestCaseCsv"
def oldLineToBeChanged = Domibus.reportTestCaseCsv/


log.info "START: Amend tear down scripts"
testRunner.testCase.testSuite.project.getTestSuiteList().each { testSuite ->
	testSuite.getTestCaseList().each { testCase ->
 		def tdScript = testCase.getTearDownScript()
 		log.info tdScript;
  		if (tdScript != null) {			
  			testCase.setTearDownScript( tdScript.replaceAll(oldLineToBeChanged, newLineToBeChanged) )
  		}
 	}
 }

 log.info end</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="57c9ce32-2fda-497f-9b42-e4ac9b16fbe7"><con:settings/><con:config><script>def newLine = System.getProperty("line.separator")
def oldLineToBeChanged = /(?&lt;!\/)Domibus.reportTestCaseCsv/

def newLineToBeChanged = "Domibus.reportTestCaseCsv"

def tdScript="""
Domibus.reportTestCaseCsv(testRunner, log)

def test = new Domibus(log,null,context)
def msgID = context.expand( '\${Submit Message#Response#//messageID}' )
test.cleanDBMessageID(msgID)
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
  Domibus.reportTestCaseCsv(testRunner, log)
"""

tdScript.trim().replaceAll(oldLineToBeChanged, newLineToBeChanged)
log.info tdScript</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Hash Participant" searchProperties="true" id="6e9294bb-2dcc-4fd7-823f-b7c37d52eeaa">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Hash" id="68dd1775-c451-49e5-a87d-ac34a5e09641"><con:settings/><con:config><script>def test = new BDMSL(log,null,context)
def CNAMEhash=test.encodeHash("0088:579800000778","MD5",false)
def NAPTRhash=test.encodeHash("0088:579800000778","SHA256",true)
log.info "CNAMEhash:"+CNAMEhash;
log.info "NAPTRhash:"+NAPTRhash;
test.finalize()</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="631677fd-7cae-4c7c-88b2-e13f52047cdc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Properties handling" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Sample  domibus.property change" id="3db49547-9247-4cda-94e7-951c4033ebca"><con:settings/><con:config><script>def newValueToAssignOne="test1s23"
def propertyToChangeNameOne = "domibus.security.keystore.password"
def propValueDict = ["${propertyToChangeNameOne}" : newValueToAssignOne, 'domibus.database.port':'13306', 'domibus.deployment.clustered' : 'true']

Domibus.changeDomibusProperties("RED", propValueDict,  log, context, testRunner)
Domibus.restoreDomibusPropertiesFromBackup("RED",  log, context, testRunner)

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ebbda453-91e0-4412-95b8-f0113996b9e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Third gateway property" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set true" id="f59553ac-179e-45d7-8c76-d83c0da815e2"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "true")
log.info "thirdGateway custom property set to true."</script></con:config></con:testStep><con:testStep type="groovy" name="Set false" id="facebea7-b498-44a7-80c8-a2aeded260ed"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("thirdGateway", "false")
log.info "thirdGateway custom property set to false."</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="416fa59f-35d3-4ed5-96c3-73dd68fca01b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Pmode Update" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Default Pmodes upload step for reuse" id="1dd5b287-0577-4d1b-ad9c-9d7a508365b5"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace"
def joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri()
Domibus.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix) 
Domibus.uploadPmode("sender","default","/blue/domibus-pmode-blue.xml" + suffix, context, log)

joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/red/domibus-pmode-red.xml").toUri()
Domibus.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix) 
Domibus.uploadPmode("receiver","default","/red/domibus-pmode-red.xml" + suffix, context, log)</script></con:config></con:testStep><con:testStep type="groovy" name="Default blue Pmodes upload step for reuse" id="0e30d254-2d3e-4e34-8d60-1fc0a164dbd6"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace"
def joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri()
Domibus.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix) 
Domibus.uploadPmode("sender","default","/blue/domibus-pmode-blue.xml" + suffix, context, log)</script></con:config></con:testStep><con:testStep type="groovy" name="Sample Pmode upload" id="39ef70bc-8ac5-4ae5-b896-9841557642c7" disabled="true"><con:settings/><con:config><script>import java.nio.file.Paths
def suffix =  "_SoapuiStringReplace"
def joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"\\blue\\domibus-pmode-blue.xml").toUri()
Domibus.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix) 
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml" + suffix, context, log)

joinedPath = Paths.get(context.expand('${#Project#defaultPModesPath}'),"\\red\\domibus-pmode-red.xml").toUri()
Domibus.updatePmodeEndpoints(log, context, testRunner, joinedPath, suffix) 
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml" + suffix, context, log)</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="84e70e71-809c-418e-8952-ea7b6e06d070" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Weblogic sending" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Submit message" id="b197905d-c863-42ad-a625-fed39934af47"><con:settings/><con:config><script>import org.apache.commons.io.IOUtils;  
import javax.jms.*;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.security.auth.Subject;
import java.io.InputStream;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.Hashtable;
import java.util.Map;

public class SendJMSMessageOnWeblogic {

    private static final String PROVIDER_URL = "t3://localhost:7001"; // 172.27.0.3    "t3://89.37.56.158:7001"
    private static final String USER = "wls-domibus";
    private static final String PASSWORD = "wls-password-01";
    private static final String CONNECTION_FACTORY_JNDI = "jms/ConnectionFactory";
    private static final String QUEUE = "jms/domibus.backend.jms.inQueue";

   public void run(log) throws RuntimeException {
       log.info "starting"  
 
  try{
       InitialContext ic = getInitialContext(PROVIDER_URL, USER, PASSWORD)
     
       QueueConnectionFactory cf = (QueueConnectionFactory) ic.lookup(CONNECTION_FACTORY_JNDI)
       QueueConnection qc = cf.createQueueConnection()
       QueueSession qs = qc.createQueueSession(false, Session.AUTO_ACKNOWLEDGE)
       
       Queue queue = (Queue) ic.lookup( QUEUE)
       QueueSender qsr = qs.createSender(queue)
 
 final String messageContent = "&lt;hello>world&lt;/hello>";
       qsr.send(createTestMessage(qs, messageContent))
       ic.close()
       log.info "Success"
  } catch(Exception ex) {
  log.info "Error " + ex
  }
    }

    private Message createTestMessage(QueueSession session, String messageContent) throws Exception {
        MapMessage messageMap = session.createMapMessage()
        messageMap.setStringProperty("messageType", "submitMessage")
        messageMap.setStringProperty("service", "bdx:noprocess")
        messageMap.setStringProperty("serviceType", "tc1")
        messageMap.setStringProperty("action", "TC1Leg1")
        messageMap.setStringProperty("fromPartyId", "domibus-blue")
        messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
        messageMap.setStringProperty("toPartyId", "domibus-red")
        messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
        messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
        messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
        messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
        messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
        messageMap.setStringProperty("protocol", "AS4")
        // Optional
        // messageMap.setStringProperty("conversationId", "123")
        // messageMap.setStringProperty("refToMessageId", "11")
  messageMap.setStringProperty("messageId", "c22-jms-" + new Date().getTime())
        messageMap.setJMSCorrelationID("12345")
        messageMap.setStringProperty("totalNumberOfPayloads", "1")
        messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
        messageMap.setStringProperty("payload_1_mimeType", "text/xml")
        messageMap.setStringProperty("payload_1_description", "message")
 
        byte[] payload = messageContent.getBytes()
        messageMap.setBytes("payload_1", payload)
        return messageMap;
    }

    InitialContext getInitialContext(String providerUrl, String userName, String password) throws Exception {
        InitialContext ic = null;
        if (providerUrl != null) {
            Hashtable&lt;String, String> env = new Hashtable&lt;String, String>()
            env.put(Context.PROVIDER_URL, providerUrl)
            env.put(Context.INITIAL_CONTEXT_FACTORY, "weblogic.jndi.WLInitialContextFactory")
            if (userName != null) {
                env.put(Context.SECURITY_PRINCIPAL, userName)
            }
            if (password != null) {
                env.put(Context.SECURITY_CREDENTIALS, password)
            }
            ic = new InitialContext(env)
        } else {
            ic = new InitialContext()
        }
        return ic;
    }
 
}

def smw = new SendJMSMessageOnWeblogic()
smw.run(log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="335f7f0c-850c-47b7-8f19-1e952019defa"><con:settings/><con:config><script>import javax.jms.*;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.security.auth.Subject;
import java.io.InputStream;
import java.security.PrivilegedActionException;
import java.security.PrivilegedExceptionAction;
import java.util.Date;
import java.util.Hashtable;
import java.util.Map;

public class JMSDomibusTest {

    private static final String PROVIDER_URL = "t3://localhost:8002"; //172.27.0.3
    private static final String USER = "wls-domibus";
    private static final String PASSWORD = "wls-password-01";
    private static final String CONNECTION_FACTORY_JNDI = "jms/ConnectionFactory";
    private static final String QUEUE = "jms/domibus.backend.jms.inQueue";


    static  Message createTestMessage(QueueSession session, String messageContent) throws Exception {
        MapMessage messageMap = session.createMapMessage()
        messageMap.setStringProperty("messageType", "submitMessage")
        messageMap.setStringProperty("service", "bdx:noprocess")
        messageMap.setStringProperty("serviceType", "tc1")
        messageMap.setStringProperty("action", "TC1Leg1")
        messageMap.setStringProperty("fromPartyId", "domibus-blue")
        messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
        messageMap.setStringProperty("toPartyId", "domibus-red")
        messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
        messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
        messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
        messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
        messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
        messageMap.setStringProperty("protocol", "AS4")
        // Optional
        // messageMap.setStringProperty("conversationId", "123")
        // messageMap.setStringProperty("refToMessageId", "11")
        messageMap.setStringProperty("messageId", "c22-jms-" + new Date().getTime())
        messageMap.setJMSCorrelationID("12345")
        messageMap.setStringProperty("totalNumberOfPayloads", "1")
        messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
        messageMap.setStringProperty("payload_1_mimeType", "text/xml")
        messageMap.setStringProperty("payload_1_description", "message")
        byte[] payload = messageContent.getBytes()
        messageMap.setBytes("payload_1", payload)
        return messageMap;
    }

    static InitialContext getInitialContext(String providerUrl, String userName, String password) throws Exception {
        InitialContext ic = null;
        if (providerUrl != null) {
            Hashtable&lt;String, String> env = new Hashtable&lt;String, String>()
            env.put(Context.PROVIDER_URL, providerUrl)
            env.put(Context.INITIAL_CONTEXT_FACTORY, "weblogic.jndi.WLInitialContextFactory")
            if (userName != null) {
                env.put(Context.SECURITY_PRINCIPAL, userName)
            }
            if (password != null) {
                env.put(Context.SECURITY_CREDENTIALS, password)
            }
            ic = new InitialContext(env)
        } else {
            ic = new InitialContext()
        }
        return ic;
    }


    public static  void run(log) {
    	         log.info "run started"
        try{
        	log.info "run started"
            InitialContext ic = getInitialContext(PROVIDER_URL, USER, PASSWORD)
            log.info "Contect initialized"
            QueueConnectionFactory cf = (QueueConnectionFactory) ic.lookup(CONNECTION_FACTORY_JNDI)
            QueueConnection qc = cf.createQueueConnection()
            QueueSession qs = qc.createQueueSession(false, Session.AUTO_ACKNOWLEDGE)
            log.info("Contect initialized")
            Queue queue = (Queue) ic.lookup( QUEUE)
            log.info("Got Queue: " +queue)
            QueueSender qsr = qs.createSender(queue)
            final String messageContent = "&lt;hello>world&lt;/hello>";
            qsr.send(createTestMessage(qs, messageContent))
            log.info("Send message: ")
            ic.close()
            log.info "Close connection message: "
        } catch(Exception ex) {
        	log.error "catch  $ex"
            ex.printStackTrace()
        }
    }
}


def smw = new JMSDomibusTest()
smw.run(log)
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="fed27991-dbd5-4fb3-ae9e-424b3ad9a813" name="JMS-oneway Push-Auto for Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS000-Setup Environment and Database" searchProperties="true" id="b56b6acf-eb4c-4913-8757-3714c15529c4" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Clean All DBs" id="5d5d0729-92b6-4470-b95b-605acff2c895"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDatabaseAll()
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Add plugin users" id="56a1ce6c-1ef1-4bec-b04f-de64505ab776"><con:settings/><con:config><script>def unsecureLoginAllowed = context.expand("\${#Project#unsecureLoginAllowed}").toLowerCase()
if (unsecureLoginAllowed == "false" || unsecureLoginAllowed == 0) {
		 def domainValue="Default"
		 def userC2U=context.expand('${#Project#pluginAdminC2Default}')
		 def userC3U=context.expand('${#Project#pluginAdminC3Default}')
		 def passwordPl=context.expand('${#Project#adminDefaultPassword}')
		 def userRole="ROLE_ADMIN"
		 def originalUserC2="urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1"
		
		Domibus.removePluginUser("C2", context, log, domainValue, userC2U)
		Domibus.addPluginUser("C2", context, log, domainValue, userRole, userC2U, passwordPl, "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
		
		Domibus.removePluginUser("C3",context,log,domainValue,userC3U)
		Domibus.addPluginUser("C3", context, log, domainValue, userRole, userC3U, passwordPl, "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
 }</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS001-Submit Message-Basic Flow" searchProperties="true" id="c6bc93e6-660e-4e5d-966e-e2802676d91a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message To C2" id="b8f74188-9bae-4ec7-83e9-3a48f767da47"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)


messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message To C3" id="7525f9a2-4b63-44df-b318-3c3c5005a729"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin



def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC3()
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)


messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-red")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-blue")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="b11d4bed-efc5-4063-897a-9293c582303d" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS001-") // Message ID not set to fix value => test step disabled
test.finalize()
</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS001-")
test.finalize()

Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS002-Submit Message-Basic Flow-Message with ID" searchProperties="true" id="8e3b9f82-b9e4-4d0e-b0f2-2af2e27a34ae">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="01ff9f69-5f9f-4654-ba7a-588eabbaf097"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-DomJMS002-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="79060c9c-e5db-4c67-a08f-bab017ae6e23"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS002-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS002-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS006-Submit Message-Exceptional flow-Data-Message ID-Unicity" searchProperties="true" id="bd229fea-55fa-431e-a38f-9b772b8ecc5b">
            <con:settings/>
            <con:testStep type="groovy" name="Submit Message 1" id="7fc4a4ca-8ff7-4c58-aa63-797d64114914"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-DomJMS006-")
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep>
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Test 1" id="8f7de433-6d4b-4af8-9d16-eb8ef14447fa"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS006-")
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="69a1ca92-9440-4dcd-8ec6-c906da18ca75"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS006-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="b3a81751-dd3a-4fde-9240-70a5e66a28f8"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessageUnicity("-DomJMS006-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS006-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5b884e9e-8168-43ec-a800-c1e72d658f40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>36f270ac-60cf-4343-beeb-264d81eb2c0d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79af0a89-82d5-40dc-8246-f7524f20975f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9a04f265-9f1d-4a32-a7ab-54f65dc0cbc8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS007-Submit Message-messageType-Mandatory" searchProperties="true" id="a48808a6-d0cb-4103-9d88-4541d1eeb4df">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="699a49f4-0b4e-4d8c-9822-1d659bc26eee"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

//messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS007-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e56dc2ed-5618-455f-9b7f-0c5aefd8f772"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS007-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS007-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS008-Submit Message-messageType-Value" searchProperties="true" id="5e24d444-ff87-4eec-88da-baccee724ae4">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="1cb5aad5-1336-42d8-abfb-657394e6e855"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "pushMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS008-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="ff79153d-44ec-480e-8c97-72e826a8b0b3"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS008-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS008-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS009-Submit Message-action-Mandatory" searchProperties="true" id="da003f73-0158-42a0-a284-0e2a0561a439">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="b10ab980-1dca-476a-8f01-7ea17c5ff87f"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
//messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-DomJMS009-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="24a3c9f2-8978-4d9a-a944-99eaf5c5ff95"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS009-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS009-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS012-Submit Message-Service-Mandatory" searchProperties="true" id="c9311941-be6b-4edd-88c0-62884d769f34">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="26b11c1c-f256-4f51-a03a-4e024ab8440a"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
//messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-DomJMS012-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a9e037d4-8ec5-4ec8-88b4-30f3f51b939c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS012-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS012-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS014-Submit Message-serviceType-Optional-service untyped" searchProperties="true" id="44412099-2170-4e21-ba3a-5d10212a3e53">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="a2f06b0a-4d0a-4f9d-be09-79de09081807"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocessuntyped")
//messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS014-");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="f9f53f29-e306-4aea-a7c6-c4bcbc4bafa4"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test" id="cb3b4a17-d900-449b-a954-7df59f9fca87"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS014-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS014-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS015-Submit Message-serviceType-Mandatory-service typed" searchProperties="true" id="c5c6a274-e863-40bc-8f8f-55a3318f3747">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="55dcad8d-bb2d-43f2-ab8b-7c00c9e30032"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
//messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-DomJMS015-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e6ae19ea-1238-4490-9f7e-c65f0e1dcda1"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS015-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS015-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS017-Submit Message-conversationId" searchProperties="true" id="b5e96db0-737f-4c45-8ca6-85d926d305a5">
            <con:description/><con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="e9c8e70b-674b-4a3b-bf8d-b08251a4ea8f"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-DomJMS017-1-")
messageMap.setStringProperty("conversationId", "123")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="a7d93bfb-4258-4e67-b37e-125ffb5e07c1"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC3()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-red")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-blue")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap, "pluginAdminC3Default")

messageMap.setStringProperty("messageId", "-DomJMS017-2-")
messageMap.setStringProperty("conversationId", "123")
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="64def3b2-d550-45db-90fc-c961f9bb3851"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS017-3-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="b0d9b5dd-a4a4-4ff8-8b2c-393c608c5c00"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS017-1-")
test.waitForStatus("DOWNLOADED","ACKNOWLEDGED","-DomJMS017-2-","300")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS017-3-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS017-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS018-Submit Message-refToMessageId" searchProperties="true" id="3a58907e-10f5-44a9-9830-d9a4ad64fa0e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="55b65d2b-89b1-49d0-a387-3848a37f3181"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS018-1-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="cf4724a4-c289-419b-9bb6-e38a8a177c44"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS018-2-")
messageMap.setStringProperty("refToMessageId", "-DomJMS018-1-")
 

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="62bfc155-9b6e-4110-a4a6-dd7091841e3a"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS018-3-")
messageMap.setStringProperty("refToMessageId", "-random-")
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f2f22107-1bbd-4fde-b9ec-4475c08d2a8c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS018-1-")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS018-2-")
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS018-3-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS018-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS020-Submit Message-agreementRef-Optional" searchProperties="true" id="2fa2c1c6-ca11-4138-b5ae-00305f2802f2">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="65eb1430-5a24-4bdb-b5ef-594fc1689dcb"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc4")
messageMap.setStringProperty("action", "TC4Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS020-1-");
messageMap.setStringProperty("agreementRef", "DummyAgr");

 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="6f132d34-c267-49bc-8958-60384ddf6660"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 1" id="1772bc99-c966-40ed-9cd3-f41f7e31c038"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DELETED","-DomJMS020-1-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="52c8cb9a-d83c-4956-9d47-242da99ab499"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="961fcf0f-ab43-49f4-8e4a-8d4f3dae7fb6"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS020-2-");

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="8f38212e-1d08-4792-98f0-e4dac6c0e210"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="b4df44c8-a896-4787-9b84-7385a8e47225"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS020-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS020-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log);
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS023-Submit Message-agreementRefType-Optional" searchProperties="true" id="de36ad75-1ec7-4785-ac14-768e2e952ea7">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="d37c49da-6c81-4344-a6b9-fc3e053369b1"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc4")
messageMap.setStringProperty("action", "TC4Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS023-1-");
messageMap.setStringProperty("agreementRef", "DummyAgr");
messageMap.setStringProperty("agreementRefType", "DUM");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="b6d60663-d8ea-4858-91d8-a6d26aaedfe9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 1" id="ca85e91c-8f4a-4500-9b3c-df79e91b6499"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DELETED","-DomJMS023-1-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="8910ae7f-43b3-4fca-a5d0-9dc7a1b029d2"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="2fffcfe1-6d22-44ee-a8ee-0bee2dca7a61"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc4")
messageMap.setStringProperty("action", "TC4Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS023-2-");
messageMap.setStringProperty("agreementRef", "DummyAgr");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="771a62c9-1cf5-4f96-8f55-451113b219b7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="5bd1d121-24a1-4dcf-9235-c045cff5f0c2"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DELETED","-DomJMS023-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS023-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS024-Submit Message-fromRole-Mandatory" searchProperties="true" id="77af1480-b898-4567-9e74-30f72e1ebcad">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="413dc4d7-be34-4db7-911e-fec996b800a4"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
//messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS024-1-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="b90eef27-1d6c-4916-94fe-d96a5d101521"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS024-2-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2f249bad-bc1e-4fee-be35-2e81ca8010c7"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS024-2-")
test.verifyMessagePresence(0,0,"-DomJMS024-1-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS024-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS025-Submit Message-fromRole-Empty" searchProperties="true" id="8dadc800-7cf3-4350-9765-1c97a3dcf3f9">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="b28509c0-256c-468f-b1a6-c4fb1f5497fe"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "")
messageMap.setStringProperty("toRole", "")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS025-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="6d956f7b-8efb-4c46-9b91-287d46f7c733"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS025-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS025-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS028-Submit Message-toRole-Mandatory" searchProperties="true" id="8e5160df-72bc-4d89-bb86-0ebcd0254789">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="0b4b7f2f-c4c4-4690-ae65-00ab8da424bd"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
//messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS028-1-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="ef10f196-f425-45d0-b92a-4effe73cb4cb"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS028-2-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="39615366-5442-40e3-aee5-eda2b70134f4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS028-2-")
test.verifyMessagePresence(0,0,"-DomJMS028-1-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS028-1-")
test.cleanDBMessageID("-DomJMS028-2-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS029-Submit Message-toRole-Empty" searchProperties="true" id="90a84b13-2a60-4bd4-ae2a-d9b213b6bb83">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="ed513cd7-9347-4ca0-9bdd-3e526646ac38"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "")
messageMap.setStringProperty("toRole", "")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS029-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="5bcedb1e-4c36-48bf-9e18-c01e55f7f486"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS029-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS029-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS032-Submit Message-fromPartyId-Mandatory" searchProperties="true" id="9e2a4edf-8f4f-4861-bab4-bd04f7249d0e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="0091ad82-3d01-4c7e-9428-6e0be694aaa6"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("Timestamp", "2016-01-10")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
//messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS032-1-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="35f620d6-80d8-46cf-9c64-778f37ad2a04"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS032-2-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f7594b18-6d64-4906-8666-46b2270120e3"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS032-2-")
test.verifyMessagePresence(0,0,"-DomJMS032-1-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS032-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS034-Submit Message-fromPartyType-Mandatory" searchProperties="true" id="f353ec96-46d2-4185-ab21-47baaa4774e1">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="b119d5f3-172a-40ad-8324-5ec458df8cbc"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
//messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS034-1-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="d3f68c58-4b68-46bc-8704-f1edb9d34c42"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS034-2-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e1d96915-7432-43cd-90c5-2ee6e1ee8912"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS034-2-")
test.verifyMessagePresence(0,0,"-DomJMS034-1-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS034-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS036-Submit Message-toPartyId-Mandatory" searchProperties="true" id="d54e2764-d1fd-48fd-ba11-37c01af50029">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="1df7b104-92b7-445f-917f-e4140a2da20d"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
//messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS036-1-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="fd4cfb9a-bdf0-439b-b6d2-cca17f7d0615"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS036-2-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="527cfc03-3c0e-4f24-9ea3-e4dae6b92b9d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS036-2-")
test.verifyMessagePresence(0,0,"-DomJMS036-1-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS036-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS038-Submit Message-toPartyType-Mandatory" searchProperties="true" id="b003c336-b690-44c9-99e0-5c1ff919048f">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="a75461bb-5b6a-4d45-9b00-3dfbc9a58388"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
//messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS038-1-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="0ecc34d2-dbfe-43a5-8af6-9105caf8e153"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS038-2-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="70ad0cc2-38a5-42a9-b19d-4e96c7ef7841"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS038-2-")
test.verifyMessagePresence(0,0,"-DomJMS038-1-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS038-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS040-Submit Message-JMScorrelationId-Optional" searchProperties="true" id="d7d3d757-ee55-411d-b4ac-f6eece7fba9d">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="30ed3beb-74a5-4654-a802-b7d4505e5aac"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS040-1-");
messageMap.setStringProperty("JMScorrelationId", "-DomJMS040-1-JMScorrelationId-");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="01d63629-2d71-49ef-ac5c-698fdbee60e6"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 1" id="7747307a-d0bd-4fda-bb56-9dfd23d4c135"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS040-1-")
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="c519bf1a-425d-4d15-867a-4e00fc097cf0"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="53d22724-5411-4963-a3d9-230f3013062b"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS040-2-");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="aea99db9-efb5-4004-a43d-f1b732ae1cf8"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="6ce17e68-779c-4a6e-a077-101e96ece881"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS040-2-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS040-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS041-Submit Message-originalSender-FinalReceiver-Optional" searchProperties="true" id="43bebce7-dae9-4a06-a381-0cda0f02edb1">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="4b788478-3fc8-424d-8791-431b6da53407"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocessuntyped")
messageMap.setStringProperty("action", "TC33Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
//messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
//messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS041-");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="eb877534-f11b-411a-8561-af278b9c97d2"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DELETED","-DomJMS041-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS041-");
test.finalize();

ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS043-Submit Message-protocol-Optional" searchProperties="true" id="37685858-6f00-400e-8248-383a479560bd">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="d361eb3b-63a6-4879-952b-d55962325985"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-1-");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="00db3dac-ca89-4d8d-ab6a-ca7b4d3bee2b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 1" id="de673fe2-fb64-46eb-86a1-48c025eef7b4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS043-1-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="ee59b022-aab0-494c-b5e7-9d67cb685842"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="1d9f3bec-8f93-42e2-b574-28c267eb0dc5"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS043-2-");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="a14b2adb-7ac2-461d-9f72-a551e25dcb48"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="567415f4-b19b-428c-9df2-cede41378263"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS043-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS043-");
test.finalize();

ExcelReporting.reportTestCase(testRunner, log);
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS044-Submit Message-totalNumberOfPayloads-Mandatory" searchProperties="true" id="4a96f22c-fca2-42da-ae0a-6aed0710055d">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="2bbb96c1-220a-4401-9746-0548ab3ac824"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS044-1-")

//messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="0397833f-77b1-440b-9feb-f7ac4489c1c0"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS044-2-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="974aa5ff-accf-41af-855e-2f3d17229732"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS044-2-")
test.verifyMessagePresence(0,0,"-DomJMS044-1-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS044-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS045-Submit Message-totalNumberOfPayloads-Mandatory" searchProperties="true" id="6f5c1e2c-8dec-4e46-9a5b-8a91acb635f6">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="77701411-d600-4cbe-947a-620620b6a460"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS045-1-");
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="c7425f29-0a7f-48be-8296-cb32d8ab9d92"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 1" id="0b13cb4c-b8d5-4867-a828-e4a6ea4e23d4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS045-1-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="95b40e2e-3b42-4657-abb0-a85ae750a96a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="bb230a28-0419-4462-8f88-076fafa96722"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS045-2-");
 
//messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="202c8f72-6e7e-4902-abcb-a22c30b87c90"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="9c479def-20cd-4c11-a616-50c787f16ac5"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS045-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS045-");
test.finalize();

ExcelReporting.reportTestCase(testRunner, log);</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS048-Submit Message-payload_contentId" searchProperties="true" id="54f6fee5-5c15-4cfe-a15a-9563cc36350e">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="7c827055-45b0-45dd-a587-b8aaebd57daa"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS048-1-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:whatever")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="fd8d0657-7f7f-4be2-b829-f342b2af3493"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS048-2-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 3" id="0f86433c-a074-4609-a50f-1f736eb809a4"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS048-3-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
//messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="309866f1-a0c5-40f3-b05f-c267713a1364"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS048-1-")
test.verifyMessagePresence(0,0,"-DomJMS048-2-")
test.verifyMessagePresence(0,0,"-DomJMS048-3-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS048-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS049-Submit Message-MimeType-Optional" searchProperties="true" id="64934ea3-ef7c-454b-adef-240b7e3d6b3b">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="4c4565b6-315a-484a-9bd7-aebe07b16f23"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-1-");

 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="d5471fcc-ed44-4b9d-93d9-2b7c0e1e84b3"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 1" id="391f3483-e5fa-4264-97c0-868ee960a9c1"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS049-1-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="9a7cd6d7-9a74-4ff1-99be-d938bbce6f9c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="17923479-d7c1-422c-bc83-1dd26a0de65d"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS049-2-");

messageMap.setStringProperty("p1InBody", "false"); 
messageMap.setStringProperty("totalNumberOfPayloads", "2")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload1 = pay1.getBytes()
messageMap.setBytes("payload_1", payload1)
messageMap.setStringProperty("payload_2_mimeContentId", "cid:osattachment")
//messageMap.setStringProperty("payload_2_mimeType", "application/pdf")
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes()
messageMap.setBytes("payload_2", payload2)


domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="c14c6700-b139-40fe-932a-cf9cbe34d62e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="d1677510-6cde-41b0-9cf3-736a66a06e4d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS049-2-");
test.finalize();</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS049-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79d16b81-f2af-42dc-bac7-9f612c89790c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6164c7d4-d54a-4386-a077-9c8ecc7be02b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2f1193e0-c579-43f3-af5a-d29ceb8f3ba7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS050-Test Experience-Several payloads" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Submit Message" id="bc0c6b20-3447-4719-a2d2-b67f44da361d"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS050-")
messageMap.setStringProperty("p1InBody", "false"); 
messageMap.setStringProperty("totalNumberOfPayloads", "2")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload1 = pay1.getBytes()
messageMap.setBytes("payload_1", payload1)
messageMap.setStringProperty("payload_2_mimeContentId", "cid:attachment")
messageMap.setStringProperty("payload_2_mimeType", "application/pdf")
messageMap.setStringProperty("payload_2_description", "message")
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload2 = pay2.getBytes()
messageMap.setBytes("payload_2", payload2)
/*messageMap.setStringProperty("payload_3-mimeContentId", "cid:message")
messageMap.setStringProperty("payload_3-mimeType", "text/xml")
messageMap.setStringProperty("payload_3-description", "message")
String pay3 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload3 = pay3.getBytes()
messageMap.setBytes("payload_3", payload3);*/

domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="3f17a622-a2c5-45fa-abb4-c0ff62406154"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS050-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS050-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS051-Submit message-Tab and spaces" searchProperties="true" id="9dbc9ef3-1aa8-47a4-a0a7-f38a8c74a9e6">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="aa0a128f-f16d-435e-8f22-c096a2ff4598"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", " bdx:noprocess	")
messageMap.setStringProperty("serviceType", "  tc1")
messageMap.setStringProperty("action", "TC1Leg1		")
messageMap.setStringProperty("fromPartyId", "	domibus-blue ")
messageMap.setStringProperty("fromPartyType", " urn:oasis:names:tc:ebcore:partyid-type:unregistered	")
messageMap.setStringProperty("toPartyId", "   domibus-red ")
messageMap.setStringProperty("toPartyType", " urn:oasis:names:tc:ebcore:partyid-type:unregistered	")
messageMap.setStringProperty("fromRole", " http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator ")
messageMap.setStringProperty("toRole", "	http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder	")
messageMap.setStringProperty("originalSender", " urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1   ")
messageMap.setStringProperty("finalRecipient", "		urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS051-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "	cid:message	")
messageMap.setStringProperty("payload_1_mimeType", "	text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a31ec502-5c9b-41ff-9588-8ce654c21ca5"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DELETED","-DomJMS051-", "", "110")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS051-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1296a5b0-a2bc-4847-9b70-f896c3bc1ce2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS056-EDELIVERY-3119-Issue with custom properties using JMS plugin" searchProperties="true" id="155ee545-2649-4b3a-b4bc-e590ccd36717">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="9e84086f-55d3-456e-aaff-aa3c982fbbab"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS056-")
messageMap.setStringProperty("property_propWithoutType", "some value")
messageMap.setStringProperty("property_propWithType", "value")
messageMap.setStringProperty("propertyType_propWithType", "type")
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c14c9844-56fd-40e1-b7ce-754f96b6b15d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS056-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS056-")
test.finalize()

Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS057-Security Enabled-Incorrect password of plugin user" searchProperties="true" id="6840b8cc-ab8c-4ef8-a22e-37fb52277bcd" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="46eb0868-5791-4f4b-a448-f72b820a3e27"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
def u = context.expand('${#Project#pluginAdminC2Default}')
def p = context.expand('${#Project#adminDefaultPassword}')
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap, u, p + "incorect" )

messageMap.setStringProperty("messageId", "-DomJMS057-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="e4e9ad4b-1441-4e7d-b1b2-85d5e3382431"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS057-")
test.finalize()</script></con:config></con:testStep><con:setupScript/><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS057-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS058-Security Enabled-Not existing plugin user" searchProperties="true" id="7e984caa-35a6-49d5-a918-1aa84b5ed932" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="2ad4662e-8198-48de-8926-323beb535a8a"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
def u = context.expand('${#Project#pluginAdminC2Default}')
def p = context.expand('${#Project#adminDefaultPassword}')
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap, u + "not existing", p)

messageMap.setStringProperty("messageId", "-DomJMS058-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="6081eb02-a919-4704-a0d3-306d3acc2990"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS058-")
test.finalize()</script></con:config></con:testStep><con:setupScript/><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS058-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS059-Security Enabled-Authentication properties not provided" searchProperties="true" id="a165db7d-13ae-46d0-850b-eae0e83e769c" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message" id="092312eb-4a86-41ab-b550-6779988b20e5"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
// Authentication information not added to message properties
// domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-DomJMS058-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="31affd46-d3b6-4df5-bafc-865b77afd3c0"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS059-")
test.finalize()</script></con:config></con:testStep><con:setupScript/><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS058-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS060-Submit Message-send larger payload" searchProperties="true" id="2879ef39-8897-4b3d-84b2-183845ed520c" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="2b4f2dfb-2a04-49a5-82d3-df6da6c13a19"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS060-")

messageMap.setStringProperty("p1InBody", "false"); 
messageMap.setStringProperty("totalNumberOfPayloads", "2")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
//send the payload as a file system reference
messageMap.setStringProperty("payload_2_mimeContentId", "cid:attachment")
messageMap.setStringProperty("payload_2_mimeType", "application/pdf")
messageMap.setStringProperty("payload_2_description", "message")
def attachmentPath = context.expand("\${#Project#pdfAttachment}")
log.info "Try to use file from hard drive as attachment: ${attachmentPath}"
File file = new File(attachmentPath)
assert file.exists() : "Attachment/file not found"
assert file.canRead() : "Attachment/file cannot be read"

messageMap.setStringProperty("payload_2_fileName", file.getName())
messageMap.setString("payload_2", "file:////${attachmentPath}")

domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="ccb3c375-558f-464f-9e19-9a90fe1aa2a4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS060-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS060-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:setupScript>def unsecureLoginAllowed = context.expand('${#Project#unsecureLoginAllowed}')
def inputList = [ "DomJMS057", "DomJMS058", "DomJMS059"]
	
if (unsecureLoginAllowed == "true" || unsecureLoginAllowed == "1" || unsecureLoginAllowed == "y" || unsecureLoginAllowed == "yes") {
	log.info "As project property unsecureLoginAllowed value is: " + unsecureLoginAllowed + " try to disable test cases for authentication: ${inputList}"
	inputList.each { tcName ->
		def tcList = testSuite.testCaseList.findAll {it.name =~ /${tcName}/ }
		if (tcList.size() == 0) 	log.error "Incorrect name of test case for disabling: ${tcName}"
		else {	
			tcList.each { tc -> 
				if (!tc.isDisabled()) {
					log.warn "Disabling test case as includs authentication check: ${tc.name} "
					tc.setDisabled(true)
				}
			}
		}
	}
}

def superUser=context.expand('${#Project#superAdminUsername}')
def superPassword=context.expand('${#Project#superAdminPassword}')
// Select message filters for C2
Domibus.setMessageFilters("C2","Jms",context,log)
// Select message filters for C3
Domibus.setMessageFilters("C3","Jms",context,log)
</con:setupScript><con:tearDownScript>def inputList = [ "DomJMS057", "DomJMS058", "DomJMS059"]
	
inputList.each { tcName ->
		def tcList = testSuite.testCaseList.findAll {it.name =~ /${tcName}/ }
		if (tcList.size() == 0) 	log.error "Incorrect name of test case for enabling: ${tcName}"
		else {	
			tcList.each { tc -> 
				if (tc.isDisabled()) {
					log.warn "Enable back test case as includs authentication check: ${tc.name} "
					tc.setDisabled(false)
				}
			}
		}
	}
</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite id="889a6cde-2346-488a-b9e6-882db54ba222" name="JMS-oneway Push-Auto Not for Bamboo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS003-Submit Message-Exceptional flow-No receipt" searchProperties="true" id="43bf9d34-f13f-4453-8eae-de0ecb066013">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Change blue Pmode to contains incorrect red endpoint" id="f682d0db-26d2-4591-aff4-3b92d92a92a1"><con:settings/><con:config><script>Domibus.uploadPmode("sender","special","/invalidEndpoint/domibus-pmode-blue-red_invalid.xml", context, log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="de0c90c6-c7bb-440a-a8e8-6cc2848634d3"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
MapMessage messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS003-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="7dea4934-9134-4c01-a63f-77bf898a1c67"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS003-")
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Revert - upload default blue Pmode" id="a92815af-8e39-4a6b-8aa3-4c6a14c103a9" disabled="true"><con:settings/><con:config><script>Domibus.uploadPmodeIfStepFailedOrNotRun(log, context, testRunner, "Revert - upload default blue Pmode", "Default blue Pmodes upload step for reuse")</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS003-")
test.finalize()
testRunner.testCase.testSteps['Revert - upload default blue Pmode'].run(testRunner, context)
Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4dc722a-da83-4d6d-9cf8-262dc58f0585</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d96c0d09-2b87-4cfa-a0dc-f96081c863ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS004-Submit message-Exceptional flow-retry max not reached" searchProperties="true" id="a3142e98-3c58-404e-8df1-9d496aca97d7">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Change blue Pmode to contains incorrect red endpoint" id="4522d982-446f-47d2-8132-fbe386e88a2b"><con:settings/><con:config><script>Domibus.uploadPmode("sender","special","/invalidEndpoint/domibus-pmode-blue-red_invalid.xml", context, log)
</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="829e0d8e-2a47-4b9e-8f3a-39b72b55920e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="8b58a8d4-da4d-45d7-8c72-189249dcd64c"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS004-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f5a04124-7520-4f95-967b-6adf4cf6b940"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS004-")
test.verifyMessagePresence(1,0,"-DomJMS004-")
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Revert - upload default blue Pmode" id="6468bfcc-43fc-471a-b67f-23cd36568c32"><con:settings/><con:config><script>Domibus.uploadPmodeIfStepFailedOrNotRun(log, context, testRunner, "Revert - upload default blue Pmode", "Default blue Pmodes upload step for reuse")</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="bf73f906-cf05-40f4-a6e3-7b9533e8a478"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check message submitted" id="66ed89a4-11fd-44b6-b9a3-83862d5c420d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS004-","Long")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS004-")
test.finalize()

testRunner.testCase.testSteps['Revert - upload default blue Pmode'].run(testRunner, context)
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c6f08d0-5ce3-4757-b59f-44bb1b1640b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0a2b3efa-6626-42cd-bf6a-1b83dd688944</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS052-Test Experience-Truststore Update" searchProperties="true" id="ff55d964-18c9-4e7b-b115-3951aaa82ee1">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Upload unsuitable truststore Blue" id="d4abae1b-2817-4150-82f0-4adc027da343"><con:settings/><con:config><script>// Upload unsuitable truststore to blue.  
Domibus.uploadTruststore("sender","special","/DynamicDiscovery/C2/oasis/gateway_truststore.jks",context,log)


</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="08df79cf-6a8c-4c6c-8c35-fe9902d5b837"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="3d466139-a0b8-48ca-a209-27787aa80a4f"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS052-1-")
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="6d16b3db-49d9-41e5-bfab-ef4fb12eac77"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test" id="1752fd64-6aed-4bd9-a397-60d57afff83e"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS052-1-")
test.verifyMessagePresence(1,0,"-DomJMS052-1-")
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="6fa68f75-7596-4414-8cbd-e89d0ec28650"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Restore Truststore" id="b355b6b6-4a06-43d1-ae35-fdc0a70d7316"><con:settings/><con:config><script>// Upload default truststore for blue.  
Domibus.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="405947a7-04d2-4daf-8845-3cf93e4b4ab8"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="c731a8de-a071-4454-8103-2510abed3feb"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS052-2-")
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="6cdb7806-3b13-4c45-92b8-572181e30f14"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test good truststore" id="9152946c-b96c-4fed-8ea0-fb38d64e6f9d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS052-2-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS052-")
test.finalize()
testRunner.testCase.testSteps['Restore Truststore'].run(testRunner, context)
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bed6d5e9-a752-4924-85f2-7d968b646bac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS054-Manual-EDELIVERY-1684-Message Id should always be present in the messages sent" searchProperties="true" id="1f50f26e-5224-4b2d-8bc2-8658055b9892">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="fea2782b-272f-478b-be91-bccf90a928bf"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS054-")
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="feb1fe7c-9923-4031-ad5e-0b87f98ac623"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS054-"); // intentionally send second message with same ID the message should end in [internal] domibus.DLQ queue

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test msg present" id="6a6962b1-9d78-403d-b7d7-5d31f4a2a503"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS054-")
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="Wait for failure" id="136e9b89-cef0-4f5a-a4aa-09fdd25c3552"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check jms reply queue" id="c5796fc5-0178-408f-b668-265a7fa27a0e"><con:settings/><con:config><script>Domibus.SearchMessageJmsQueue("C2", context, log,"-DomJMS054-","Message with id [-DomJMS054-] already exists","domibus.backend.jms.replyQueue")
</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS054-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="1f5f29d9-fc8a-4d9c-a684-ab9eb27fef1e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS061-EDELIVERY-4238-Push-Payload inside body" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set Message Filter to Jms for Blue and Red" id="b3d9b07b-988b-4490-86b7-33d65698daa6"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","Jms",context,log)
Domibus.setMessageFilters("receiver","Jms",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit message Jms" id="7e1fc7df-d1bd-47af-9c1d-c8beae0de8e4"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

	messageMap.setStringProperty("messageType", "submitMessage")
	messageMap.setStringProperty("service", "bdx:noprocess")
     messageMap.setStringProperty("serviceType", "tc24")
	messageMap.setStringProperty("action", "TC24Leg1")
     messageMap.setStringProperty("conversationId", "123")
     messageMap.setStringProperty("fromPartyId", "domibus-blue")
     messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered"); 
     messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
     messageMap.setStringProperty("toPartyId", "domibus-red")
     messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");             
	messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
	messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");            
	messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
	messageMap.setStringProperty("protocol", "AS4")
	messageMap.setJMSCorrelationID("12345")
	    	    
	//Set up the payload properties
     messageMap.setStringProperty("totalNumberOfPayloads", "1")
	messageMap.setStringProperty("payload_1_mimeType", "text/xml")
	messageMap.setStringProperty("payload_1_description", "message")
	messageMap.setStringProperty("p1InBody", "true"); 

	//send the payload in the JMS message as byte array
	//String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
	String pay1 = "&lt;test>test&lt;/test>";
	byte[] payload = pay1.getBytes()
	messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Submit message Jms - two messages" id="87129b55-ca5a-4a0b-9249-8b39eb9f9d57"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

	messageMap.setStringProperty("messageType", "submitMessage")
	messageMap.setStringProperty("service", "bdx:noprocess")
     messageMap.setStringProperty("serviceType", "tc24")
	messageMap.setStringProperty("action", "TC24Leg1")
     messageMap.setStringProperty("conversationId", "123")
     messageMap.setStringProperty("fromPartyId", "domibus-blue")
     messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered"); 
     messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
     messageMap.setStringProperty("toPartyId", "domibus-red")
     messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");             
	messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
	messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");            
	messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
	messageMap.setStringProperty("protocol", "AS4")
	messageMap.setJMSCorrelationID("12345")
	    	    
	//Set up the payload properties
     messageMap.setStringProperty("totalNumberOfPayloads", "3")
	messageMap.setStringProperty("payload_1_mimeType", "text/xml")
	messageMap.setStringProperty("payload_1_description", "message")
	messageMap.setStringProperty("p1InBody", "true"); 

	//send the payload in the JMS message as byte array
	//String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
	String pay1 = "&lt;test>test&lt;/test>";
	byte[] payload = pay1.getBytes()
	messageMap.setBytes("payload_1", payload)

messageMap.setStringProperty("payload_2_mimeContentId", "cid:attachment")
messageMap.setStringProperty("payload_2_mimeType", "application/pdf")
messageMap.setStringProperty("payload_2_description", "message")
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4="
byte[] payload2 = pay2.getBytes()
messageMap.setBytes("payload_2", payload2)

domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Check 1" id="e41fb710-c2ce-479e-bb15-39d167a86510"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog(null, """ Check in the logs that the xml payload is sent in the message body and not as a seperate mime part.
Check also that payloads in receiver side arrived in correct order."""); 

if(result == javax.swing.JOptionPane.YES_OPTION)
	{
		log.info "PASS: Result as expected, continuing the test";
	}
else if(result == javax.swing.JOptionPane.NO_OPTION)
	{
		log.info "FAIL: Manual check unsuccessful";
		testRunner.fail("Manual check indicated as unsuccessful by user")
	}
else if (result == javax.swing.JOptionPane.CANCEL_OPTION) 
	{
		log.info "SKIP: Check skipped bu user";
	}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter to WS for Blue and Red" id="18ddb29d-855b-4ac0-9d51-fd9a8bf72ad0" disabled="true"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendWebservice",context,log)
Domibus.setMessageFilters("receiver","backendWebservice",context,log)
</script></con:config></con:testStep><con:tearDownScript>
Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>32187c3e-10a4-4f74-bb76-0024b1cf6dc0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="72b8b126-62b1-45d7-a21e-7d5cc9e28457" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS062-Payload size" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Update PMode Blue lt payload size" id="e8938cce-4f91-4bc3-824b-af539907479e"><con:settings/><con:config><script>import java.nio.file.Paths

def currentValue=['2147483647'];
def newValue=['79'];
def filePath=Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri();
def newFileSuffix="_someSuffix.xml";

Domibus.updatePmodeParameter(log, context, testRunner,currentValue,newValue,filePath, newFileSuffix);
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml"+newFileSuffix,context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter to Jms for Blue and Red" id="0bc56303-4680-4864-b707-7f2240cf4221"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","Jms",context,log)
Domibus.setMessageFilters("receiver","Jms",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number C2" id="2fa5b95e-06f0-4fe3-88a8-27e30b5ea4e4"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="groovy" name="Submit message Jms 1" id="0e60c2d3-0ec0-4be0-bc45-8eea8b588811"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

	messageMap.setStringProperty("messageType", "submitMessage")
	messageMap.setStringProperty("service", "bdx:noprocess")
     messageMap.setStringProperty("serviceType", "tc24")
	messageMap.setStringProperty("action", "TC24Leg1")
     messageMap.setStringProperty("conversationId", "123")
     messageMap.setStringProperty("fromPartyId", "domibus-blue")
     messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered"); 
     messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
     messageMap.setStringProperty("toPartyId", "domibus-red")
     messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");             
	messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
	messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");            
	messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
	messageMap.setStringProperty("protocol", "AS4")
	messageMap.setJMSCorrelationID("12345")
	    	    
	//Set up the payload properties
     messageMap.setStringProperty("totalNumberOfPayloads", "3")
	messageMap.setStringProperty("payload_1_mimeType", "text/xml")
	messageMap.setStringProperty("payload_1_description", "message")
	messageMap.setStringProperty("p1InBody", "true"); 
	messageMap.setStringProperty("messageId", "-Jms062-1-")

	//send the payload in the JMS message as byte array
	//String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
	String pay1 = "&lt;test>test&lt;/test>";
	byte[] payload = pay1.getBytes()
	messageMap.setBytes("payload_1", payload)

messageMap.setStringProperty("payload_2_mimeContentId", "cid:attachment")
messageMap.setStringProperty("payload_2_mimeType", "application/pdf")
messageMap.setStringProperty("payload_2_description", "message")
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4="
byte[] payload2 = pay2.getBytes()
messageMap.setBytes("payload_2", payload2)

domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file C2" id="ad1833f1-b3b0-4acb-9abe-7ec58762c07b"><con:settings/><con:config><script>def logValueList =  ["Payload size.*is greater than.*maximum value.*"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:testStep type="groovy" name="Update PMode Blue gt payload size" id="cf2ba8aa-b84d-4661-9729-83d65f60f805"><con:settings/><con:config><script>import java.nio.file.Paths

def currentValue=['2147483647'];
def newValue=['81'];
def filePath=Paths.get(context.expand('${#Project#defaultPModesPath}'),"/blue/domibus-pmode-blue.xml").toUri();
def newFileSuffix="_someSuffix.xml";

Domibus.updatePmodeParameter(log, context, testRunner,currentValue,newValue,filePath, newFileSuffix);
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml"+newFileSuffix,context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Submit message Jms 2" id="42693b41-99ba-4ca3-821b-36428f85daf7"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

	messageMap.setStringProperty("messageType", "submitMessage")
	messageMap.setStringProperty("service", "bdx:noprocess")
     messageMap.setStringProperty("serviceType", "tc24")
	messageMap.setStringProperty("action", "TC24Leg1")
     messageMap.setStringProperty("conversationId", "123")
     messageMap.setStringProperty("fromPartyId", "domibus-blue")
     messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered"); 
     messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
     messageMap.setStringProperty("toPartyId", "domibus-red")
     messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered");             
	messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
	messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1");            
	messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
	messageMap.setStringProperty("protocol", "AS4")
	messageMap.setJMSCorrelationID("12345")
	    	    
	//Set up the payload properties
     messageMap.setStringProperty("totalNumberOfPayloads", "3")
	messageMap.setStringProperty("payload_1_mimeType", "text/xml")
	messageMap.setStringProperty("payload_1_description", "message")
	messageMap.setStringProperty("p1InBody", "true"); 
	messageMap.setStringProperty("messageId", "-Jms062-2-")

	//send the payload in the JMS message as byte array
	//String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
	String pay1 = "&lt;test>test&lt;/test>";
	byte[] payload = pay1.getBytes()
	messageMap.setBytes("payload_1", payload)

messageMap.setStringProperty("payload_2_mimeContentId", "cid:attachment")
messageMap.setStringProperty("payload_2_mimeType", "application/pdf")
messageMap.setStringProperty("payload_2_description", "message")
String pay2 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4="
byte[] payload2 = pay2.getBytes()
messageMap.setBytes("payload_2", payload2)

domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test Success" id="fdd74bd8-3dcb-4926-b551-4fb30f5af65d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-Dom527-jms01-")
test.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter to WS for Blue and Red" id="77f0c37d-a997-4943-b0aa-5c241da6b6c3" disabled="true"><con:settings/><con:config><script>Domibus.setMessageFilters("sender","backendWebservice",context,log)
Domibus.setMessageFilters("receiver","backendWebservice",context,log)
</script></con:config></con:testStep><con:tearDownScript>
Domibus.reportTestCaseCsv(testRunner, log)</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>78</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>32187c3e-10a4-4f74-bb76-0024b1cf6dc0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS063-Submit message-Exceptional flow-Data-Message ID-Maximum length" searchProperties="true" id="bb7fb10b-f167-4da5-984c-e4f8a690b794">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set logs starting line number" id="74e3cf1f-db65-422e-8614-68a5f98df9a4"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="61b72431-cea5-4908-b7d3-8e5a97f90cf3"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="05c54d66-7314-4f8c-8cb1-353b9bed6282"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

messageMap.setStringProperty("messageId", "-Length-256-aabbcceeffaaaaaa012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="a5845a0c-e74f-4e50-b40e-cb0df7bbe493"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test" id="4f7edb6d-49d6-4ebe-aa63-5d4d832be421"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-Length-256-aabbcceeffaaaaaa012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="382df329-ff98-4a0e-9359-208ca1d36902"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file" id="a3c82b10-aad6-4870-af7c-d3c5d7b98ceb"><con:settings/><con:config><script>def logValueList =  ["EbMS3Exception: Value of MessageId is too long"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:tearDownScript>
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>1016</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS064-Submit message-Exceptional flow-Data-RefToMessageId-Maximum length" searchProperties="true" id="97f7c31a-5ee0-4875-b763-b3f0e0718dbf">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set logs starting line number" id="d0cad556-1769-403f-8bc1-f49db52bea0d"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="cd7676d6-54c4-42a1-b785-ba4cfdf9a3dc"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d0673427-e8ba-45e8-8c43-281fc0ebe60b"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS064-");
messageMap.setStringProperty("refToMessageId", "-Length-256-aabbcceeffaaaaaa012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="2608dfe3-70fb-4e21-8f90-91918d516d77"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test" id="82ce0d4d-8a49-4c73-8fbb-2e1814558806"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS064-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="756c79d8-2401-4593-9244-c39357fd6039"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file" id="94ec290c-288d-46b7-9b72-5164f791eefe"><con:settings/><con:config><script>def logValueList =  ["EbMS3Exception: RefToMessageId value is too long"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS064-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log);
</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>908</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS065-Submit message-Exceptional flow-Data-AgreementRefId-Maximum Length" searchProperties="true" id="5897e2cc-8915-44f7-b070-901513dfabd2">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set logs starting line number 1" id="e2c283d4-b023-444e-93bd-2836ac63d6fc"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="647837bc-06f3-4434-b794-7a280aea380b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="f18d16e7-9f1d-4bf3-8286-52e8d0266870"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS065-1-");
messageMap.setStringProperty("agreementRef", "-Length-256-aabbcceeffaaaaaa012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="e9fcd912-2423-4b22-9780-2abd58690caf"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 1" id="97acd336-b6b4-4292-87fe-c075cacdb8cd"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS065-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="a4a66fb3-a305-4ce9-aa52-61f417193092"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file 1" id="be63dede-57f4-4d66-b666-09184a1ae3ed"><con:settings/><con:config><script>def logValueList =  ["EbMS3Exception: AgreementRef Value is too long"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:testStep type="delay" name="D3" id="1ffa4194-c1c1-4cb9-80fb-f3de2504741b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Set logs starting line number 2" id="a3a7431c-1cbd-4a74-9b83-6dc034b62c6e"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D4" id="4251cbe9-c883-4803-8d5f-72b33e0515f7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="89cee387-458d-4cd7-a634-1395ea654a81"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc4")
messageMap.setStringProperty("action", "TC4Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS065-2-");
messageMap.setStringProperty("agreementRef", "DummyAgr");
messageMap.setStringProperty("agreementRefType", "-Length-256-aabbcceeffaaaaaa012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D5" id="c066a09b-1d2a-48b2-8786-777a9d9077f0"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test 2" id="910a21a9-dd12-4c55-beb2-2c0c0fcd372b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS064-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D6" id="0bc91bc6-15ed-4dc6-ad14-7df1869d76cb"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file 2" id="d5e9d473-5c68-4973-9e41-9f39de0163b5"><con:settings/><con:config><script>def logValueList =  ["EbMS3Exception: RefToMessageId value is too long"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS065-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log);
</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>908</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS066-Submit message-Exceptional flow-Data-ConversationId-Maximum Length" searchProperties="true" id="7fbeabab-f7aa-40de-b371-b91c12ed611f">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set logs starting line number" id="1f19beca-5cb7-4198-af25-be5cd089a603"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="92649b72-2d4d-41a9-a463-ea9fca94d937"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="811aadd6-5c25-4fb3-b89c-4609aaa0af1d"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS066-");
messageMap.setStringProperty("conversationId", "-Length-256-aabbcceeffaaaaaa012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="1b2527e7-81dd-44c7-a7c7-a053c3f13328"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test" id="3476e070-8f61-4797-bd64-6cc066e6e7c2"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS066-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="d2972d41-fe05-4cba-b695-1094e37035c9"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file" id="ddbfca0f-85d5-48d1-abe2-9f9ffaabfcac"><con:settings/><con:config><script>def logValueList =  ["EbMS3Exception: ConversationId is too long"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS066-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log);
</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>1045</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS067-Submit message-Exceptional flow-Data-Original Sender-Maximum length" searchProperties="true" id="48ef22df-157b-4a4c-b6f7-8c8b4ccb3e3a">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set logs starting line number" id="ba35d8f9-6004-4186-83e4-8b919533144e"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="f207dfbe-9fc4-458e-ac2c-f4056972ac79"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="525ffd6a-812e-4409-b1e0-f87eb9dec721"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-012345678901234567890123456789012345678901234length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-012345678901234567890123456789012345678901234length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-012345678901234567890123456789012345678901234length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012341234567898765432123456789")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS067-");

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="5586e678-4a12-4218-b00b-5dfbe9ddea58"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test" id="33579e7e-a2de-4557-83bf-f05e8e7909a9"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS067-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="370e590b-b601-49fd-a18e-a66db04d1af0"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file" id="68682cd8-39a5-4ddc-adfd-1f4dc9c8eddf"><con:settings/><con:config><script>def logValueList =  ["EbMS3Exception: originalSender property has a value which exceeds 1024 characters"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS067-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log);
</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>1859</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS068-Submit message-Exceptional flow-Data-Final Receiver-Maximum length" searchProperties="true" id="0266ad61-7ba6-4d2a-895b-89e7b1e08ef1">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Set logs starting line number" id="a4a55a80-320a-4c46-af31-0092dee8e5c1"><con:settings/><con:config><script> Domibus.checkNumberOfLinesToSkipInLogFile("C2","domibus.log", log, context, testRunner)</script></con:config></con:testStep><con:testStep type="delay" name="D0" id="77da74e3-4932-4fbb-ac5c-cf8cb5d55bfa"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="40daeaf2-e670-4ee6-acf5-e498896564ad"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-012345678901234567890123456789012345678901234length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-012345678901234567890123456789012345678901234length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-012345678901234567890123456789012345678901234length-1025-123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-01234567890123456789012345678901234567890123456789-0123456789012345678901234567890123456789012341234567898765432123456789")

messageMap.setStringProperty("protocol", "AS4")
 
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)

// Optional
messageMap.setStringProperty("messageId", "-DomJMS068-");

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="a699343b-3e95-4b68-b2a1-7533ed7ada1d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Test" id="8c86a255-1d34-4155-a81a-d0391753cd94"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(0,0,"-DomJMS068-");
test.finalize();</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="31303c59-cad6-4b59-8ae9-c3a2dfcbe52c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check sender log file" id="2f64e257-f464-44c1-870b-bd96e7427cc4"><con:settings/><con:config><script>def logValueList =  ["EbMS3Exception: finalRecipient property has a value which exceeds 1024 characters"];
Domibus.checkLogFile("C2","domibus.log", logValueList, log, context, testRunner);</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith("-DomJMS068-");
test.finalize();
ExcelReporting.reportTestCase(testRunner, log);
</con:tearDownScript><con:properties><con:property><con:name>skipNumberOfLines</con:name><con:value>2666</con:value></con:property></con:properties>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="56622746-a47f-4bf8-af90-c884725e3fb1" name="JMS-oneway Push-Manual test cases"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS055-Manual-EDELIVERY-1706-JMS Monitoring: empty messages are not displayed" searchProperties="true" id="afb24ea2-e853-4fc2-9790-e18c1c36617c">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Submit Message 1" id="0d533f4e-cb65-46bd-92c9-3b4bfb0919f4"><con:settings/><con:config><script>import org.apache.activemq.ActiveMQConnectionFactory;
import javax.jms.*;
import javax.naming.NamingException;

ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61616")
Connection connection = null;
MessageProducer producer = null;
connection = connectionFactory.createConnection("domibus", "changeit"); //username and password of the default JMS broker
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)
Destination destination = session.createQueue("domibus.DLQ")
producer = session.createProducer(destination)
producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT)
 
Message request = session.createTextMessage(null)
 
log.info "Sending Text message with empty (null) text message"
producer.send(request)
log.info "Text message sent"

connection.close()</script></con:config></con:testStep><con:testStep type="groovy" name="Check if messageID property can be found in JMS queues" id="9bc7c53e-dc91-4f6c-b09a-9729f8fd936d"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"""\
In previous step intentionally empty text message was send to Dead Letter Queue.
Check on Domibus - JMS Monitoring page that message is present in:
[internal] domibus.DLQ JMS queue of Sender.
"""); 

if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:tearDownScript>Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90414ed1-d501-45a8-86b6-466a1352735c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd8b9098-8fbd-42a9-8eb7-67404b5f59dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>906220c2-8277-4fcb-a3bd-f15306888b25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53c0a958-b619-493b-b45b-7b9d7ecf4e43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e138bc36-5999-4555-b848-c445b16888f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="1e9e408e-be46-479a-83aa-d8c07e0a80dd" name="EDELIVERY-1340-Maximum number of sending attempts" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS005-Submit message-Exceptional flow-retry max reached" searchProperties="true" id="c1a12aba-d88a-43ed-9c3b-e2dcd7b75221" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Stop Receiver MSH" id="c2c033d6-c56a-4e70-8dc2-85910b94fa27"><con:settings/><con:config><script>Domibus.stopMSH("receiver",context, log);</script></con:config></con:testStep><con:testStep type="delay" name="D1" id="af1c8abf-19a2-42f7-811e-4c5390057bdf"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="02027f3d-c570-42a5-a683-a9137054dda7"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
domUtils.addPluginCredentialsIfNeeded(context, log, messageMap)
messageMap.setStringProperty("messageId", "-DomJMS005-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="8df6843a-7bc4-4f15-bebd-fc02c1783185"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("WAITING_FOR_RETRY",null,"-DomJMS005-")
test.verifyMessagePresence(1,0,"-DomJMS005-")
test.finalize()</script></con:config></con:testStep><con:testStep type="delay" name="D2" id="aa73096e-0b1d-4451-9932-d47cc6294209"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Check message submitted" id="5fe65c2d-545f-4a69-bb41-cc726042ad15"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("SEND_FAILURE",null,"-DomJMS005-","Long")
test.verifyMessagePresence(1,0,"-DomJMS005-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>Domibus.startMSH("receiver", context, log)

Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c189cf14-cd7d-41a8-81fe-3e1d4e5c28fa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bc00ae7a-2d2a-4e11-90d4-ae07623d92ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="9c5c128b-7a86-4a1d-ac3d-e8653520ddf8" name="EDELIVERY-1386 - FallBack issue" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS011-Submit Message-action-FallBack" searchProperties="true" id="ad1abfa4-3e36-400d-96a8-3c46af0beb08" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="bb1299cb-5b95-4355-8122-cc7374b3e611"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nAction = \"TC1Leg1\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d5ede536-6f40-40b8-8761-9c641a58f2ab"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
//messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS011-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="bbec6380-2f98-4b92-9322-68574fab1c8b"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS011-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS011-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS013-Submit Message-Service-FallBack" searchProperties="true" id="50e68cf4-fb6a-4aaf-b456-5bb2c3156ea3" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="823bb11f-0d7b-4613-939c-846c82b93e04"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\n Service = \"bdx:noprocess\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="9684714d-a120-47b9-891a-d5920c577007"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
//messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS013-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a16876dc-b140-49af-9c59-d9eb1086611c"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS013-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS013-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS016-Submit Message-serviceType-FallBack-service typed" searchProperties="true" id="bcc10cfb-7768-4197-ba4a-3b159ec7a46e" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="3f062391-d1bf-467f-870f-9e441556bf51"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\n serviceType = \"tc1\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="08383fb9-7ab1-4c91-b1fe-1f6a163cf932"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
//messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS016-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="7611528d-5a58-4ba2-95c9-580b45eabe7a"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS016-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS016-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS021-Submit Message-agreementRef-FallBack" searchProperties="true" id="4140c67e-c7d8-4359-a783-4c7b0375f190" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="7a7a2611-e08c-4175-9db3-8d218f51d937"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nAgreementRef = \"backUpAgreementRef\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="31693f86-ef2d-4265-9364-e130a115d5c8"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS021-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="32520f35-8bd1-4c66-a722-bd19f26e5fe4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.waitForStatus("ACKNOWLEDGED","DOWNLOADED","-DomJMS021-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS021-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS026-Submit Message-fromRole-FallBack" searchProperties="true" id="f9a2857f-3b32-4152-af6a-1c9d9530a77a" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="fbd980b5-1d59-415a-9dee-b143a2285fe5"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromRole = \"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="2b833887-18ff-42a0-8916-b29a774c4463"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
//messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS026-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f88cfd1b-5a4d-4d6e-8cc5-f2214af439ae"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS026-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS026-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS030-Submit Message-toRole-FallBack" searchProperties="true" id="c665c6b5-0ad6-42e5-92d0-97ac58d14b6e" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="d485c1d5-840a-4f48-9249-06740816dbc8"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoRole = \"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="5241503d-9447-4033-89a8-c0ccdb2214a6"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
//messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS030-")
 
messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="0e88be3f-c412-4c1c-ae5e-af1997211c79"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS030-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS030-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>39528860-d05b-4e06-963c-ab716f1edcbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS033-Submit Message-fromPartyId-fallBack" searchProperties="true" id="18e916c0-2b6e-4fd0-a47e-9c6b75b71ea2" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="a7e69f5d-80d5-4ce3-99a7-79752aadf8a6"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromPartyID = \"domibus-blue\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="4304cb28-9411-4274-98bf-2b7a1d8c5423"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
//messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS033-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2eaa5c22-c30c-4f84-aa84-9235c93476d4"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS033-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS033-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS035-Submit Message-fromPartyType-fallBack" searchProperties="true" id="64e4086a-64ac-4387-a83b-756f6fb2e516" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="7e03fb62-cf66-476a-95b1-356aa01e4f6b"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\nfromPartyType = \"urn:oasis:names:tc:ebcore:partyid-type:unregistered\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="37a4d2d4-85ed-4c4b-8777-ee78877ec25a"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
//messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS035-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="29886356-c012-4215-88d6-e744415c56ae"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS035-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS035-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2c35fd83-f603-4585-94ed-29800a1e4fc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS037-Submit Message-toPartyId-fallBack" searchProperties="true" id="df0cdded-e885-4443-bfc4-7ca6784792fa" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="7b27883a-c7bb-40f9-9622-95342edf13ee"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoPartyID = \"domibus-red\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="37eae58a-910e-42dc-8398-4d9e891e4678"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
//messageMap.setStringProperty("toPartyId", "domibus-red")
messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS037-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c4c6f0e1-8433-4dfe-93a1-6d5f8251556d"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS037-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS037-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomJMS039-Submit Message-toPartyType-fallBack" searchProperties="true" id="76c132d2-c1a9-412a-9aa1-672da4a93bbb" disabled="true">
            <con:settings/>
            
            
            
            
            
            
            
            
            
            
            
            
            <con:testStep type="groovy" name="Update Default properties file" id="1beef9ee-efef-4a6c-a7c4-d926fa76da2d"><con:settings/><con:config><script>def result=javax.swing.JOptionPane.showConfirmDialog( null,"Add line:\ntoPartyType = \"urn:oasis:names:tc:ebcore:partyid-type:unregistered\""); 
if(result == javax.swing.JOptionPane.YES_OPTION)
{
	log.info "continuing the test";
}
else if(result == javax.swing.JOptionPane.NO_OPTION)
{
	log.info "script aborted";
	testRunner.fail("Test aborted by user")
}</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="956aa314-f763-4c4e-a8fe-a56248369605"><con:settings/><con:config><script>import javax.jms.*
import eu.domibus.test.jms.DomibusJMSPlugin

def MapMessage messageMap = null
def domUtils = new eu.domibus.test.jms.DomibusJMSPlugin(log, context)
messageMap  = domUtils.jmsConnectionHandlerInitializeC2()

messageMap.setStringProperty("messageType", "submitMessage")
messageMap.setStringProperty("service", "bdx:noprocess")
messageMap.setStringProperty("serviceType", "tc10")
messageMap.setStringProperty("action", "TC10Leg1")
messageMap.setStringProperty("fromPartyId", "domibus-blue")
messageMap.setStringProperty("fromPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("toPartyId", "domibus-red")
//messageMap.setStringProperty("toPartyType", "urn:oasis:names:tc:ebcore:partyid-type:unregistered")
messageMap.setStringProperty("fromRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator")
messageMap.setStringProperty("toRole", "http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder")
messageMap.setStringProperty("originalSender", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
messageMap.setStringProperty("finalRecipient", "urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
messageMap.setStringProperty("protocol", "AS4")
messageMap.setStringProperty("messageId", "-DomJMS039-")

messageMap.setStringProperty("totalNumberOfPayloads", "1")
messageMap.setStringProperty("payload_1_mimeContentId", "cid:message")
messageMap.setStringProperty("payload_1_mimeType", "text/xml")
messageMap.setStringProperty("payload_1_description", "message")
String pay1 = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=";
byte[] payload = pay1.getBytes()
messageMap.setBytes("payload_1", payload)
domUtils.sendMessageAndClean(messageMap)
domUtils.finalize()</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="2170fd66-892a-4ca1-b062-076b82998dc3"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.verifyMessagePresence(1,1,"-DomJMS039-")
test.finalize()</script></con:config></con:testStep><con:tearDownScript>def test = new Domibus(log,null,context)
test.cleanDBMessageID("-DomJMS039-")
test.finalize()
Domibus.reportTestCaseCsv(testRunner, log)
</con:tearDownScript><con:properties/>
        <con:reportParameters/><con:breakPoints><con:testStepId>2eb6a89f-41c9-40f9-9d70-074e25d6ff5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1a0cbdd-efe1-412d-aac5-b62315a3ac06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f84a4b44-9f2f-41e5-aeb5-ad4b50027daf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="212794ed-7238-43a9-bbe4-75c252b1943e" name="Multitenancy - playground" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8fd78511-c17b-47a3-bcb9-9051b558e4ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX19-noMultitenancy-Backward Compatibility-Security disabled-jms" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configration" id="e03f49ef-d45c-464b-8827-9627e04c4904"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Multitenancy is not configured (No general schema specified). 
- Set properties (multitenancyModeC2,multitenancyModeC3) to (0,0).
- Plugin security is disabled.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="a2b05f6a-2e97-4700-a7f9-731c32ab1a5a" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 0.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Disable plugin security" id="18d689ff-ac07-49bd-96ba-8cc881522b3e" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Disable plugin security for C2 and C3.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="9e32b0ac-768a-4276-94d7-9ff8bf40be15" disabled="true"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
log.info "================================================";
log.info "================ Upload PModes for C2 ================";
log.info "================================================";
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log)
log.info "================================================";
log.info "================ Upload PModes for C3 ================";
log.info "================================================";
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststore" id="81f128c8-cb64-4c8f-8eec-8b6fcda576f7" disabled="true"><con:settings/><con:config><script>// Upload truststore for C2
Domibus.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log)
// Upload truststore for C3
Domibus.uploadTruststore("receiver","default","\\red\\gateway_truststore.jks",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="bb074728-1ac0-445a-8242-0b09e3a935b7" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","Jms",context,log)
// Select message filters for C3
Domibus.setMessageFilters("C3","Jms",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="be338c3d-be72-46bb-9c66-f9c376128c79"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c74639a8-5c7d-42a4-825e-0dfafb5d556b"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="cf53314e-0ec0-4ac3-a0e0-22ef1ac9b1dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX32-noMultitenancy-Backward Compatibility-Security enabled-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configration" id="ad70110f-8cea-4ee0-b898-babd32b339cd"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Multitenancy is not configured (No general schema specified). 
- Set properties (multitenancyModeC2,multitenancyModeC3) to (0,0).
- Plugin security is enabled.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="dd5f0f2e-3bd1-4704-ae31-6f323f5ecc13" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 0.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="f751e020-7d26-44f1-b888-d591339df489" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for C2 and C3.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="f668eea1-798c-4aaf-8ad6-7a49f1ac5b49" disabled="true"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
log.info "================================================";
log.info "================ Upload PModes for C2 ================";
log.info "================================================";
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log)
log.info "================================================";
log.info "================ Upload PModes for C3 ================";
log.info "================================================";
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststore" id="ed19ec3f-9441-4150-a97f-edabe8626965" disabled="true"><con:settings/><con:config><script>// Upload truststore for C2
Domibus.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log)
// Upload truststore for C3
Domibus.uploadTruststore("receiver","default","\\red\\gateway_truststore.jks",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="1cf79b6f-f099-4973-b231-72e5b69e6c53" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log)
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d26f6a04-0e36-44f9-bf5d-84a593be859e"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="28be59fa-5266-4f65-8cfe-23be34424751"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="475cda04-7790-4488-ac68-20e25214a005" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX33-Multitenancy-Backward Compatibility-Default domain-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configration" id="8f3c48d1-2290-41d4-b31e-6f365ee2f68f"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- general schema is created.
- Multitenancy is configured for C2. 
- Set properties (multitenancyModeC2,multitenancyModeC3) to (0,0).
- Plugin security is enabled.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="5b18ccb2-a8bc-469b-915d-f1ae15068891" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "0")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 0.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="ed96ccc7-3e9b-4064-b21d-7abb995f12a8" disabled="true"><con:settings/><con:config><script>// Upload PModes: default Pmodes (blue for sender and red for receiver)  
log.info "================================================";
log.info "================ Upload PModes for C2 ================";
log.info "================================================";
Domibus.uploadPmode("sender","default","\\blue\\domibus-pmode-blue.xml",context,log,"Default","successfully",null,"super","Domibus-123")
log.info "================================================";
log.info "================ Upload PModes for C3 ================";
log.info "================================================";
Domibus.uploadPmode("receiver","default","\\red\\domibus-pmode-red.xml",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststore" id="d73fea49-5cd8-4608-ad3b-2b40291f9c7e" disabled="true"><con:settings/><con:config><script>// Upload truststore for C2
Domibus.uploadTruststore("sender","default","\\blue\\gateway_truststore.jks",context,log, "Default", "successfully","test123", "super","Domibus-123")
// Upload truststore for C3
Domibus.uploadTruststore("receiver","default","\\red\\gateway_truststore.jks",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="282044c8-a235-4f24-b986-67e94d79696b" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"Default", null, "super", "123456")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="1e89c71e-c630-4856-a51e-6468ba9b4855"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\MAIN\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="69b5822e-a984-4271-9fc1-a4ce93044007"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7028849b-5899-415e-8b9e-6c281c2f6a7d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX34-Multitenancy-Tenant selection-Outgoing message-Default properties-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="6fc440a3-5ea5-44ce-abe5-32c578b51211"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain "domibus_C2Dom1" is configured for C2.
- No specific properties present for the domain domibus_C2Dom1 (except for mandatory Keystore/Truststore properties).
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (1,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1". 
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="54567036-f3d0-45a0-bae3-5eb287350bf5" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "1")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 1.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="21acadfe-fbae-4772-b016-dbc79c289272" disabled="true"><con:settings/><con:config><script>// Create userC1 in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create userC4 in C3
Domibus.addPluginUser("red",context,log,"Default","ROLE_USER","userC4","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="9b8c0431-d9f1-430a-b838-3293de917148" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="10262c95-8877-41b9-85b4-7599a940a765" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter FS" id="be9a25df-94f3-40f2-b179-4f852973116d" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="5e2fa59c-6907-435c-b22f-52ffd125a0f3"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="852c4b8b-a336-43d4-8251-8c0b089b4fd5"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is submitted.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="7994aa99-d53c-45d0-9f55-bece748b1a52" disabled="true"><con:settings/><con:config><script>// Remove userC1 in C2
Domibus.removePluginUser("blue",context,log,"domibus_C2Dom1","userC1C2Dom1")
// Remove userC4 in C3
Domibus.removePluginUser("blue",context,log,"Default","userC4");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="25f53527-7d4d-42d0-9bbd-a6245b7102c5" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomXX5-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="153a7e24-85b7-421c-a640-41451d8bdb93" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX35-Multitenancy-Tenant selection-Outgoing message-Select correct-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="175970d3-a42c-443b-9486-4e68fbb07784"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain "domibus_C2Dom1" is configured for C2.
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1". 
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="50494d8c-d2c7-4196-b2c9-86d7246efd64" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="c757decc-5e05-4c8f-8004-46f50836da75" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for C2.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="a068c054-30e5-47b1-9a45-39c996d62ff2" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"Default","ROLE_USER","userC1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1","super","123456")
// Create users in C3 
Domibus.addPluginUser("red",context,log,"Default","ROLE_USER","userC4","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="d17941c7-83e2-4282-95d0-b00ad8f15cb3" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="fb378766-1b11-4c22-aa94-254e7f9c2c54" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter FS" id="113c5d3f-0f9d-41ac-9c1e-70747d192dcc" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="3e361d10-ddb3-4fd5-9983-8d6b99d74fea"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="b23bf971-2ff4-40fd-9b8e-ee51e1ed3b17"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="738eaf92-799b-4a26-a5c9-fae721b59680" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomXX5-'))
test.finalize()	
</script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="3e2eae07-d183-4437-8801-117453e2f06b" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove userC4 in C3
Domibus.removePluginUser("blue",context,log,"Default","userC4");</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="02f78ae9-aab0-44b5-8323-6306820d507b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX36-Multitenancy-Tenant selection-Outgoing message-Select wrong-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="7f20a47f-b253-4dde-9a7b-297c6e8267d8"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain "domibus_C2Dom1" is configured for C2.
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1". 
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="a9908602-fffd-40dd-b1dc-d4582876e62c" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="8abca31b-977a-497a-ac1c-9b7de39980d9" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for C2.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="877511c9-d7fc-4a07-8130-3854aa96ef80" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("red",context,log,"Default","ROLE_USER","userC4","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="b59e8c39-635e-49cd-9af3-00064dd638b7" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="790f0e25-f5dc-4974-a0e4-2d7bf06b6a17" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter FS" id="2bd3d61a-5586-4e97-bcde-fe3878ccff3b" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="02dc4e14-13ca-4612-a39f-ec7f13f57122"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom2\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom2\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom2\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="c2bc71bf-74cd-411c-9308-c7b87ef665a8"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is not submitted.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="6524f607-a0ca-466d-b309-5187a9aeb780" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomXX5-'))
test.finalize()	
</script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="bad51869-094c-4f39-ac0c-8b996c1b2c17" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove userC4 in C3
Domibus.removePluginUser("blue",context,log,"Default","userC4");</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fa75e6cd-c64f-4b7d-b823-e99b91954dd7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX37-Multitenancy-Tenant selection-Outgoing message-Domain name length-Min-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="5b910f9e-96af-4622-a5c0-2a36a553713b"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain with name "a" is configured for C2.
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (3,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1". 
- Create plugin authentication user on C2: "userC1C2Dom3" linked to "originalSender" and domain "a". 
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="75f8e987-e66d-4b02-bbe1-b35b09e349dc" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 3.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="2df822f0-f696-460f-b48b-73b158411391" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for C2.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="c05d044b-9905-422c-8d24-822a0cf1950c" disabled="true"><con:settings/><con:config><script>// Create userC1 in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"a","ROLE_USER","userC1C2Dom3","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")

// Create userC4 in C3
Domibus.addPluginUser("red",context,log,"Default","ROLE_USER","userC4","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="6daee2b7-fc8c-4896-aad9-b32766e84da6" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"a")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="100c26d1-a1c2-4274-ab39-28c39a3bc8e9" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"a")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter FS" id="b993ed5a-f35d-4da4-aa94-2e5de389ad03" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"a")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendWebservice",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="ad1c22b6-e436-44d0-a776-88e92e58aade"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\a\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\a\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\a\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="a5710820-f0e6-4598-b93a-2226c189dd3c"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="acd95004-a446-4c59-9948-dfce1bce9c3f" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("blue",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("blue",context,log,"a","userC1C2Dom3")
// Remove users in C3
Domibus.removePluginUser("blue",context,log,"Default","userC4");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="f1bf2b39-9d90-4a2e-895e-31b68969d37f" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX37-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f2f86fa1-a5f6-41ac-aa51-8158fa5a416a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX38-Multitenancy-Tenant selection-Outgoing message-Domain name length-Max limit-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="77fb31ea-b50f-4434-bf3f-ebcd056307f2"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Plugin security is enabled for C2.
- domain with name.length=50 is configured for C2 (domain_equal_max).
- Multitenany is not configured for C3.
- Set properties (multitenancyModeC2,multitenancyModeC3) to (3,0).
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1". 
- Create plugin authentication user on C2: "userC1C2Dom3" linked to "originalSender" and domain "domain_equal_max". 
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="9924115e-ed38-4a3f-b90e-ecf8a48885f8" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for C2.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="d50b5704-5491-4b4d-bdbd-b195836e1d34" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "3")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 3.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="c2e0c535-6869-4959-804c-f369e388a3dc" disabled="true"><con:settings/><con:config><script>// Create userC1 in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","ROLE_USER","userC1C2Dom3","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")

// Create userC4 in C3
Domibus.addPluginUser("red",context,log,"Default","ROLE_USER","userC4","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="b484e25e-ba83-435c-b147-fb8eaf7d0901" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="d1d54f9b-958a-4487-bccd-eefaba30de3d" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter FS" id="0ad7c861-025f-4afb-a6f3-588262b9edc1" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="74b2771e-a8f0-4cdf-bedf-e7135db23ad7"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="f6fb1475-0963-49e0-bd6c-141ee3bfd663"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="8da933e8-d086-4e7d-b374-2222e1297d29" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("blue",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("blue",context,log,"length_equal_50_aaaabbbbbbbbbbbbbbbbbbbbcccccccccc","userC1C2Dom3")
// Remove users in C3
Domibus.removePluginUser("blue",context,log,"Default","userC4");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="511821fc-285a-475e-a35b-e3b3b94f6a46" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX38-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1562ac4-451a-4996-8415-c67cf3c86fd0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX41-Multitenancy-Tenant selection-Outgoing message-Basic flow-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="4f4d92a8-ed39-4faa-a06c-27606e9e86b6"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="865fccef-3d0f-4598-9aa8-c204f2bfd51c" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="8cb691aa-7d31-42ec-b09b-cb8cded71d50" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="6ec8bcb0-462a-495c-ae16-2ca02e5b6148" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="3d17ab48-08c7-485a-bd07-e3b639a5e7c1" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="279017c1-b085-49f1-b456-f5c33cefdc0e" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="de0e1784-ab2a-4a61-9b5d-425ef1b676fb" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="a0340fbf-57e7-40a8-9662-4f2c69ba0237"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="5c501d4e-0a3a-4fb0-b707-8b66666bc44d"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="ede30ef1-38af-4abe-b06f-e9d4e848e754" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="b6b8bccc-fc31-45a4-8cf5-bd2411877e01" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX41-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="71bf86fe-2835-464f-b9b0-5025b589a6a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX42-Multitenancy-Tenant selection-Incoming message-Domain found-ws" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="425c06dc-cea3-44d9-b10f-786b5e39d7fb"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
- Upload PModes in C2 and C3. Append strings: “?domain=domibus_C2Dom1” to the endpoint of C2 and “?domain=domibus_C3Dom2” to the endpoint of C3.  
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="4edd4473-6a79-4095-ab8e-69cb8824303d" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="6bbb4d02-50ba-4192-89e5-c41281d8da0c" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="1d3a178f-94af-47fc-a6b3-02b2b28eca91" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="11c54cb5-c874-4187-a6f4-736d186e38b0" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="c665d28f-d61e-4380-b237-46092ed93022" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS" id="750fa41f-1b7d-4dad-a4b0-fc6173f8e489" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
//Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
//Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="request" id="657f1752-a85f-43ee-a4fe-ce6d52c56967" name="Submit Message"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX42-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0437d1bc-ceaa-4c63-8cdd-a8d9332f02db" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8bfe8083-e19c-452d-8980-86635b045d8b" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context)
test.waitForStatus("ACKNOWLEDGED", "RECEIVED", null, null, null, "C2Dom1", "C3Dom2")
test.finalize()</scriptText></con:configuration></con:assertion><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="347e0d43-0420-4859-a6ab-cdab085ba37d" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="a76a02a6-e248-4632-b316-40e932ddee01" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX42-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4b60e717-fdf8-4a97-8169-7134ca093d7e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX43-Multitenancy-Tenant selection-Incoming message-Domain not found-ws" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="262cc19b-48c8-433b-8ead-4c1981758b98"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
- Upload PModes in C2 and C3. For PModes uploaded to C2, append strings: “?domain=domibus_C2Dom1” to the endpoint of C2 and “?domain=domibus_C3Random” to the endpoint of C3. 
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="6e78473e-b0ca-41ed-ba2e-38c0a1615358" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="59292f0d-05ce-4b29-abb9-e61ab89f88c8" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="fecfb57d-943e-43b4-b662-6f78dde4037e" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="5638f2b0-e766-4d56-9f5a-6a7d3e7e2675" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\randomC3Domain\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="7bb02e6a-7d30-4e80-bb3e-241889411dfb" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS" id="d22f651c-bb61-41a8-9395-524a8678b07a" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="request" id="c91239cc-5427-4407-841e-c2551edb997f" name="Submit Message"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX43-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0437d1bc-ceaa-4c63-8cdd-a8d9332f02db" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8bfe8083-e19c-452d-8980-86635b045d8b" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context)
test.waitForStatus("WAITING_FOR_RETRY", "", null, null, null, "C2Dom1", "C3Dom2")
test.finalize()</scriptText></con:configuration></con:assertion><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="31e8c851-cb2f-4c11-abc9-964edd0980cd" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="e4da1bbd-a22e-4497-94f3-46fda6cae208" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX43-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b0df6a88-b852-420f-bd91-05f916fdd0e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX44-Multitenancy-Tenant selection-Incoming message-Domain wrong-ws" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="c32f7251-4fc2-415a-9e6c-b414f744d9d2"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
- Upload PModes in C2 and C3. Append strings: “?domain=domibus_C2Dom1” to the endpoint of C2 and “?domain=domibus_C3Dom1” to the endpoint of C3. 
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="6b842cb4-44f5-4e6f-b9e6-9afd44d84259" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="a61c6cd3-d9d7-42bc-a1c2-d8cf6e5dcca8" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="2b5915a5-3a58-43b5-bfe2-4c4367c1e8d9" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="7e26092c-fb33-4d91-8594-d3af46ef8cc9" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom1\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="e73d4c19-61af-4726-9379-9c38a810caae" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS" id="db21608b-bf9d-482a-89ec-6652bed85cc4" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="request" id="09ffc5b7-864d-4e55-8225-0e68f31fcc00" name="Submit Message"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX44-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0437d1bc-ceaa-4c63-8cdd-a8d9332f02db" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8bfe8083-e19c-452d-8980-86635b045d8b" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context)
test.waitForStatus("WAITING_FOR_RETRY", "", null, null, null, "C2Dom1", "C3Dom2")
test.finalize()</scriptText></con:configuration></con:assertion><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="0aec7ecd-9240-40ed-aaa7-e228b30bd9d0" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="d88d5255-46b7-47e9-8ee4-5957b448a9cc" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX44-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bce67c51-28fd-4d8f-9b14-fc34d8be9e94" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX48-Multitenancy-Tenant selection-Incoming message-Domain found-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="7d52b2a9-270d-4f68-822b-09ed370fa5e4"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="dcef78c1-2433-47d8-803c-4dbc33a9a25f" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="56b40169-49aa-4b0d-9d1a-4ddf09a63a4a" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="c53b626c-e2db-45e6-b76b-d2fa9e000f56" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="b6caed6b-678b-409d-b4a9-9c5a6116efc6" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="45df6d56-48c7-41f1-9e55-4451a183d559" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="25c71d9b-d480-4c21-a6b0-8c5f092896b7" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="da2f73bb-a763-4ff1-8a13-aae2e4e3ccec"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="b800f122-9e6a-4dd7-a9f6-332c2fe73cb8"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="f65408e4-8d1f-41fa-b82a-d9a0f04c70af" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="2bae96f9-08d0-46b4-b2eb-36408ab357ad" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX48-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d6b89219-4bc5-477a-85f8-bb70dd58e572" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX49-Multitenancy-Tenant selection-Incoming message-Domain not found-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="bffda557-1fe5-49b9-a39b-666110717203"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="15ac3836-87f2-4bd3-ae0f-abe27ada2c7b" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="0425626b-aefe-42bd-951e-3c594b8e4b7d" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="694b80ec-31d4-462c-bd64-926bb86063aa" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="4f11a5e8-1f59-45c1-a3b5-e891f63a96a5" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\randomC3Domain\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="a039c84f-270e-4d45-b1ba-215ca0a8f16a" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="0a0fca07-489c-41b8-a268-82808bec5760" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="65428a56-c29d-4809-acb7-5715f76238fe"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="09569a6a-19ad-444c-9904-6966f3fe3d78"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is not acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="3cbad18d-62e0-42ca-b90e-d476bed0d68f" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="bd983ac7-4f29-4fa2-b03c-8b5e0ea17944" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX48-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bd8b4f90-3d97-445a-87ce-c3c6b921c2a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX50-Multitenancy-Tenant selection-Incoming message-Domain wrong-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="df0c60c5-26a2-4227-8d3d-613210209dd2"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="a50120d5-aeff-4a79-99a2-a42529ca22ef" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="e30a1ad5-c39a-4cb6-8978-85de7a8a2ae5" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="c4ef770f-b4de-4b8f-820b-3f233c3524c2" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="33fc2d80-f06b-4903-bf87-813919670e43" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom1\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="e53d1bc3-cec4-4380-b589-28278807f827" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="733b3db4-f304-46db-bdac-0522c32a7be2" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="124903de-8849-4b83-9d90-ea427e9d6f14"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="d6878d46-cfa9-489d-b200-2ac3184790df"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is not acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="b2cf7306-b43a-43d6-94e4-41f2863d98d5" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="c34076b8-3d87-4cf0-b051-dd07da24f199" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX48-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ae1fbaaf-c6cc-4156-a852-bbca32c66cbd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX51-Multitenancy-Tenant selection-Incoming message-Domains-folder-Creation-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="7ed40a98-00b7-4a2f-bb96-2a8fc5b6e029"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is present in the truststore of domain "domibus_C3Dom1" and "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="0091d69e-119d-477b-b7bb-18f67075b9ed" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="1c7cca53-21c6-4f36-8d79-7924c433f3f6" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="a5494e48-9956-4cec-a93d-96bcb0ca8d83" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes 1" id="06db0a75-4a61-47bb-a34b-fd5b876c039c" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
//Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
//Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores 1" id="92f3ed90-2f0f-467b-8c9e-b0ed2680df2a" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="d55e2f61-86a4-46aa-923a-16978dbdaf3e" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 1" id="2556f0d5-1c5e-4452-bfb7-9984bbb0800b"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes 2" id="24becece-6c63-44ef-b95c-e53f651d8007" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom1\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom1\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores 2" id="7c40c69d-11bb-4ead-8f36-8ba5e8a94a69" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message 2" id="c057c45e-e8ab-4ac4-b91f-0b23c5a05b04"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\standard\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="127951b6-4a58-44eb-b19c-29dabe5e16cb"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that a folder is created in C3 for each message inside each targeted domain folder
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="1daefffe-8da2-4977-8329-6b33c657f12a" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="7f6529d9-d151-421d-84d8-ba0acbceaed9" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX41-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="197b2827-65e2-4031-bcd8-5c5875cafabb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX54-Multitenancy-Security-Outgoing message-wrong user password-ws" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="8281a5be-d165-4a6f-b862-77c02b7b782d"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="abad7f24-f9fe-4852-9bd9-adf6e92063cf" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="8113adb6-cb09-4183-8ebd-9449a0455e27" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="785cf4af-21db-49f3-88c6-b4b3c8472c79" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="b6fc7dfa-7fdd-41e7-a9d4-e43f09abbdd5" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="8d22c296-a657-4bdf-a860-06592ef7a1c7" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS" id="ef10cf65-1f08-4748-880a-d3d071180d40" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="request" id="b54763cb-41d0-4174-9103-de1183056b9c" name="Submit Message 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX54-1-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="Not SOAP Fault Assertion" id="06d13f0f-a30b-4107-baab-cc4fead484bf" name="SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>wrong</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="eca08c42-2851-4872-b434-28987b576563" name="Submit Message 2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message 2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX54-2-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="4867ee3d-c218-4366-849a-378a3bc12835" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f3389ec9-1e32-4f61-808b-c3ca35da99ad" name="getStatus C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX54-2-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Not SOAP Fault Assertion" id="2fe9b01c-1469-4375-bb24-d64cf813a08a" name="SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>wrong</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="List Pending Messages C3 Dom1" id="2632e9d6-b802-4bac-9cf6-a183972df481">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C3 Dom1" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="Not SOAP Fault Assertion" id="52db5494-848c-4f5d-8a5b-ddfece7a5df4" name="SOAP Fault"/><con:credentials>
                            <con:username>userC4C3Dom1</con:username><con:password>wrong</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" id="11232970-d52b-40b8-b104-7f9d3b4db460" name="retrieveMessage"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>retrieveMessage</con:operation><con:request name="retrieveMessage" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="85e5ccac-5aea-4b2f-94d8-ab1a46142d4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>-DomX54-2-</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="210630ad-1205-4eb3-86c3-2efc781a8cb6"/><con:assertion type="Not SOAP Fault Assertion" id="9d31ce46-fe7c-4eaa-8af5-2ad6ae3a4348" name="SOAP Fault"/><con:credentials><con:username>userC4C3Dom2</con:username><con:password>wrong</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a668224d-3a85-4ac4-af22-8e320b2a8605" name="getMessageErrors C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getMessageErrors</con:operation><con:request name="getMessageErrors C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4aece6dd-167a-49cc-979b-a8d1ecebad84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>-DomX54-2-</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c04b101-695b-445e-9406-a7fcb5b07ab6" name="SOAP Response"/><con:assertion type="Not SOAP Fault Assertion" id="38b479f4-c44a-4bf9-a489-20593b70ce4a" name="SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>wrong</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="bded869b-8ce7-4883-acd4-10b30a8f938a" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="caed9b04-608c-48e4-8b98-9154efcc01d7" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX54-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c52984eb-8c6d-4666-985f-d3d459c7e1ea" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX55-Multitenancy-Self sending-Different Domain-ws" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="a13f0456-83ab-47cb-88d3-592115174e0b"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,0).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="9a5e8d90-50cf-4438-9cc3-ea1ee355154c" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="72dcd7f5-2e1f-4e44-a027-f06fae42712f" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="a15ab67b-01b5-4dba-89df-1cf8c1f3e7e6" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS" id="00c26b18-9c2a-4e20-948a-24c081535b29" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="4b76239e-1e67-45bc-ba48-dc516fc4b360" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 Domain1 ================";
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC2Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
log.info "================ Upload pmodes C2 Domain2 ================";
Domibus.uploadPmode("C2","default","\\red\\domibus_C2Dom1ToC2Dom2\\domibus-pmode-red.xml",context,log,"domibus_C2Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="6682df59-56f6-4d06-8f91-298505a3b3a1" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 Domain1 ================";
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
log.info "================ Upload truststores C2 Domain2 ================";
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")


</script></con:config></con:testStep><con:testStep type="request" id="3c1a1829-7dfa-4490-913b-5e7b69a2680d" name="Submit Message"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX55-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0437d1bc-ceaa-4c63-8cdd-a8d9332f02db" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8bfe8083-e19c-452d-8980-86635b045d8b" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context)
test.waitForStatus("ACKNOWLEDGED", "RECEIVED", null, null, null, "C2Dom1", "C2Dom2")
test.finalize()</scriptText></con:configuration></con:assertion><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="222389a2-0bdd-4b06-936b-d7e43bd7b910" name="getStatus C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX55-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="1007dc97-97a7-441c-8de3-0dae5d222059" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="43df71f7-0365-4667-8930-54ebe3502637" name="getStatus C2 Dom2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX55-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="24e132f2-5877-43d5-84fe-efa1b07d8ab1" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="List Pending Messages C2 Dom2" id="606ed57e-e523-4c79-ab1a-784fffc1d6ea">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C2 Dom2" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="Simple Contains" id="7c94bb26-69f3-4771-92ca-96b365c71ec7" name="Contains"><con:configuration><token>-DomX55-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="3fb533ae-fe7e-46fc-bda4-56ebbea13b1e" name="Not SOAP Fault"/><con:credentials>
                            <con:username>userC1C2Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" name="List Pending Messages C2 Dom1" id="335fcb59-cf73-44bd-b142-faabe0817172">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C2 Dom1" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="SOAP Fault Assertion" id="3fb533ae-fe7e-46fc-bda4-56ebbea13b1e" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" id="b2792745-dd75-447c-b41f-c77ca3969365" name="Not Contains"><con:configuration><token>-DomX55-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials>
                            <con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" id="46b2423c-c1fe-4fb8-9628-dc4dda6ac973" name="retrieveMessage"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>retrieveMessage</con:operation><con:request name="retrieveMessage" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="85e5ccac-5aea-4b2f-94d8-ab1a46142d4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>-DomX55-</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="210630ad-1205-4eb3-86c3-2efc781a8cb6"/><con:assertion type="SOAP Fault Assertion" id="78b4bb05-5a4f-41c3-a809-9fb968a74bf3" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="List Pending Messages C2 Dom2 After Download" id="43c6eff1-6fe3-4c8b-a0cf-9d1063398116">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C2 Dom2 After Download" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="SOAP Fault Assertion" id="af93e5ba-4c76-4cab-8452-0abff8db5e41" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" id="eca7570d-af76-4f17-b6e4-160b32acae68" name="Not Contains"><con:configuration><token>-DomX55-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials>
                            <con:username>userC1C2Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" id="c7e0e6a4-11b4-4a79-b190-682cc27d2104" name="getStatus C2 Dom1 After Download"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1 After Download" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX55-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7ed36985-296c-49c2-9b28-07c7be4f6d47" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="20a8fd7a-edf9-4390-af02-b7e239fe6272" name="getStatus C2 Dom2 After Download"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom2 After Download" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX55-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>(?s).*[DOWNLOADED|DELETED].*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="986226cb-ec2b-45bd-984c-e3761704d50b" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="dd38e45a-499a-493f-bc8e-4cd71a94766d" name="getMessageErrors C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getMessageErrors</con:operation><con:request name="getMessageErrors C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4aece6dd-167a-49cc-979b-a8d1ecebad84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>-DomX55-</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c04b101-695b-445e-9406-a7fcb5b07ab6" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e097eba2-b44b-400b-9d9d-f9f5a1be9707" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e14958d3-0681-4665-aa6d-3f55dd88e397" name="getMessageErrors C2 Dom2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getMessageErrors</con:operation><con:request name="getMessageErrors C2 Dom2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4aece6dd-167a-49cc-979b-a8d1ecebad84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>-DomX55-</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c04b101-695b-445e-9406-a7fcb5b07ab6" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5418f8a3-85a5-48d1-8511-8838acabbb52" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="50aac4ec-a7b9-4811-b35d-eba67a1ad551" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="29b1c97e-17c9-473e-801c-ebd0b1d6f76e" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX55-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="74ffbf12-c21e-402a-ac11-6615c0a4247c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX56-Multitenancy-Self sending-Same Domain-ws" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="0f324799-ca6b-4814-943d-946ef275ceaf"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,0).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="d920d89d-84fa-4ff7-9666-395964326551" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="4fea54bc-f44f-440b-8ebc-3c1e776a3f0f" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="db617f99-0ee4-4edb-b797-eccba63c4f85" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS" id="6e095b05-7df1-4f45-8a33-af39da5d79f2" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="06552a59-9d6f-4c0c-bfe8-b13cecd1b5dc" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 Domain1 ================";
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC2Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
log.info "================ Upload pmodes C2 Domain2 ================";
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC2Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="a7930a1a-cfcb-45b5-8fe5-8c0108ade5b8" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 Domain1 ================";
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
log.info "================ Upload truststores C2 Domain2 ================";
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")


</script></con:config></con:testStep><con:testStep type="request" id="bf061936-f04e-4170-a19c-15a17567a945" name="Submit Message"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX56-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0437d1bc-ceaa-4c63-8cdd-a8d9332f02db" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8bfe8083-e19c-452d-8980-86635b045d8b" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context)
test.waitForStatus("ACKNOWLEDGED", "", null, null, null, "C2Dom1", "C2Dom1")
test.finalize()</scriptText></con:configuration></con:assertion><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="e9eed857-6b3b-4d55-b159-b881de794a3f" name="getStatus C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX56-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="1007dc97-97a7-441c-8de3-0dae5d222059" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="737cd7f3-e4a4-4d72-8c7b-3f8fef83144d" name="getStatus C2 Dom1 R"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1 R" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX56-_1</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="24e132f2-5877-43d5-84fe-efa1b07d8ab1" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="List Pending Messages C2 Dom1" id="e56b098f-190e-47b4-922e-e62d79b03492">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C2 Dom1" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="Simple Contains" id="7c94bb26-69f3-4771-92ca-96b365c71ec7" name="Contains"><con:configuration><token>-DomX56-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="3fb533ae-fe7e-46fc-bda4-56ebbea13b1e" name="Not SOAP Fault"/><con:credentials>
                            <con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" id="8f8341e9-b541-4d08-9f2b-b23aeee25f05" name="retrieveMessage"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>retrieveMessage</con:operation><con:request name="retrieveMessage" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="85e5ccac-5aea-4b2f-94d8-ab1a46142d4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>-DomX56-_1</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="210630ad-1205-4eb3-86c3-2efc781a8cb6"/><con:assertion type="SOAP Fault Assertion" id="78b4bb05-5a4f-41c3-a809-9fb968a74bf3" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="List Pending Messages C2 Dom1 After Download" id="8627ddc1-4698-4f05-a094-b557333748e1">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C2 Dom1 After Download" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#localUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="SOAP Fault Assertion" id="af93e5ba-4c76-4cab-8452-0abff8db5e41" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" id="eca7570d-af76-4f17-b6e4-160b32acae68" name="Not Contains"><con:configuration><token>-DomX56-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials>
                            <con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" id="74c22d3e-e456-4b4e-b71d-7cf8f529cd57" name="getStatus C2 Dom1 After Download"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1 After Download" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX56-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7ed36985-296c-49c2-9b28-07c7be4f6d47" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="6ee66b4d-3020-450d-9c4f-1b7e9bbbe112" name="getStatus C2 Dom1 R After Download"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1 R After Download" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX56-_1</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>(?s).*[DOWNLOADED|DELETED].*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="986226cb-ec2b-45bd-984c-e3761704d50b" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="943361ca-34b3-411f-a75b-d8541ebf3bea" name="getMessageErrors C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getMessageErrors</con:operation><con:request name="getMessageErrors C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4aece6dd-167a-49cc-979b-a8d1ecebad84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>-DomX56-</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c04b101-695b-445e-9406-a7fcb5b07ab6" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e097eba2-b44b-400b-9d9d-f9f5a1be9707" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5ba8a07c-c21b-4555-9286-ca046e484f41" name="getMessageErrors C2 Dom1 R"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getMessageErrors</con:operation><con:request name="getMessageErrors C2 Dom1 R" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4aece6dd-167a-49cc-979b-a8d1ecebad84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>-DomX56-</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c04b101-695b-445e-9406-a7fcb5b07ab6" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5418f8a3-85a5-48d1-8511-8838acabbb52" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="229bb7d7-7c4e-4185-8761-281c6e9613f2" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="3a8ceeab-2e69-462e-95f1-931b9a9aa5a1" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX56-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f9481fae-082d-493a-b5d6-927a6c7d2f86" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX57-Multitenancy-Pull MEP-Basic flow-ws" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="4865d3a4-0b6c-47e9-8f66-b442c714ec45"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="a7631a77-4011-4e34-8d36-2e08b1945836" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="f44e74a4-8a0f-49b4-a31e-8b50265c72e4" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="058627e3-2d50-432f-9268-bf6fa68a0042" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="fd989bba-252a-4f51-850f-4ee68af70037" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="9eb64713-40d8-453c-b1ae-3e943acf1b09" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to WS" id="c1150eed-bab6-4cf6-9a39-ecf28820c235" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendWebservice",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="request" id="83466031-74e8-4643-aa04-ccc5a03d72f0" name="Submit Message"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Submit Message" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX57-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc13">bdx:noprocess</ns:Service>
               <ns:Action>TC13Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="0437d1bc-ceaa-4c63-8cdd-a8d9332f02db" name="Not SOAP Fault"/><con:assertion type="GroovyScriptAssertion" id="8bfe8083-e19c-452d-8980-86635b045d8b" name="Script Assertion"><con:configuration><scriptText>def test = new Domibus(log,messageExchange,context)
test.waitForStatus("ACKNOWLEDGED", "RECEIVED", null, null, null, "C2Dom1", "C3Dom2")
test.finalize()</scriptText></con:configuration></con:assertion><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="7c980110-1302-437f-9e58-cf7c15dc6922" name="getStatus C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX57-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="1007dc97-97a7-441c-8de3-0dae5d222059" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="32ea9eab-c615-4fbc-9ad2-859d63715363" name="getStatus C3 Dom2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C3 Dom2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX57-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>RECEIVED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="24e132f2-5877-43d5-84fe-efa1b07d8ab1" name="Not SOAP Fault"/><con:credentials><con:username>userC4C3Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="List Pending Messages C3 Dom2" id="309b6740-8421-4d2a-beab-86e467d9ae17">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C3 Dom2" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="Simple Contains" id="7c94bb26-69f3-4771-92ca-96b365c71ec7" name="Contains"><con:configuration><token>-DomX57-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="3fb533ae-fe7e-46fc-bda4-56ebbea13b1e" name="Not SOAP Fault"/><con:credentials>
                            <con:username>userC4C3Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" name="List Pending Messages C3 Dom1" id="63a5327c-b3c3-4455-b80d-3f9e127d634d">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C3 Dom1" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="SOAP Fault Assertion" id="3fb533ae-fe7e-46fc-bda4-56ebbea13b1e" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" id="b2792745-dd75-447c-b41f-c77ca3969365" name="Not Contains"><con:configuration><token>-DomX57-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials>
                            <con:username>userC4C3Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" id="dfeeef5f-3f9e-44cf-8646-a0833dc3ef6c" name="retrieveMessage"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>retrieveMessage</con:operation><con:request name="retrieveMessage" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="85e5ccac-5aea-4b2f-94d8-ab1a46142d4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:retrieveMessageRequest>\r
         <messageID>-DomX57-</messageID>\r
      </_1:retrieveMessageRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="210630ad-1205-4eb3-86c3-2efc781a8cb6"/><con:assertion type="SOAP Fault Assertion" id="78b4bb05-5a4f-41c3-a809-9fb968a74bf3" name="Not SOAP Fault"/><con:credentials><con:username>userC4C3Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/retrieveMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="List Pending Messages C3 Dom2 After Download" id="3e759bfe-baf5-4268-a0a9-5e3d63e38643">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:interface>BackendService_1_1SoapBinding</con:interface>
                    <con:operation>listPendingMessages</con:operation>
                    <con:request name="List Pending Messages C3 Dom2 After Download" id="3bd62923-7ca0-487d-94d2-76fdfd82bf15">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:encoding>UTF-8</con:encoding>
                        <con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint>
                        <con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">
   <soap:Header/>
   <soap:Body>
      <_1:listPendingMessagesRequest></_1:listPendingMessagesRequest>
   </soap:Body>
</soap:Envelope>]]></con:request>
                        <con:assertion type="SOAP Response" id="15aaf1d5-2a16-4a4c-9f88-823775512faf"/>
                        <con:assertion type="SOAP Fault Assertion" id="af93e5ba-4c76-4cab-8452-0abff8db5e41" name="Not SOAP Fault"/><con:assertion type="Simple NotContains" id="eca7570d-af76-4f17-b6e4-160b32acae68" name="Not Contains"><con:configuration><token>-DomX57-</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials>
                            <con:username>userC4C3Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:jmsPropertyConfig/>
                        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
                        <con:wsrmConfig version="1.2"/>
                    </con:request>
                </con:config>
            </con:testStep><con:testStep type="request" id="164a2f8d-72bd-4b75-b4f0-08b20519bf78" name="getStatus C2 Dom1 After Download"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C2 Dom1 After Download" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX57-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>ACKNOWLEDGED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7ed36985-296c-49c2-9b28-07c7be4f6d47" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="5d773f6e-6a8f-44e2-9658-1ebe9828c0f4" name="getStatus C3 Dom2 After Download"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getStatus</con:operation><con:request name="getStatus C3 Dom2 After Download" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5bfa294e-cfc1-45e2-8020-c01c115a9252"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:statusRequest>\r
         <messageID>-DomX57-</messageID>\r
      </_1:statusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6802c3da-8316-4b9e-a0b0-5e5cd5e87571" name="SOAP Response"/><con:assertion type="Simple Contains" id="51f27293-b330-4af8-a8ea-64bd3ba84d71" name="Contains"><con:configuration><token>(?s).*[DOWNLOADED|DELETED].*</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="986226cb-ec2b-45bd-984c-e3761704d50b" name="Not SOAP Fault"/><con:credentials><con:username>userC4C3Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getStatus"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="71dc9673-e744-4845-963d-a6250478e1ac" name="getMessageErrors C2 Dom1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getMessageErrors</con:operation><con:request name="getMessageErrors C2 Dom1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4aece6dd-167a-49cc-979b-a8d1ecebad84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>-DomX57-</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c04b101-695b-445e-9406-a7fcb5b07ab6" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="e097eba2-b44b-400b-9d9d-f9f5a1be9707" name="Not SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8e1dc610-111f-426d-80e3-17fb1cccb6c2" name="getMessageErrors C3 Dom2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>getMessageErrors</con:operation><con:request name="getMessageErrors C3 Dom2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4aece6dd-167a-49cc-979b-a8d1ecebad84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#remoteUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:_1="http://org.ecodex.backend/1_1/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <_1:getErrorsRequest>\r
         <messageID>-DomX57-</messageID>\r
      </_1:getErrorsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6c04b101-695b-445e-9406-a7fcb5b07ab6" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="5418f8a3-85a5-48d1-8511-8838acabbb52" name="Not SOAP Fault"/><con:credentials><con:username>userC4C3Dom2</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/getMessageErrors"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="3a77a341-51e2-4d65-b8b3-cc6f99b7df73" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="5e93ed34-594e-4751-a809-665310ef2956" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX57-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6a09f87c-44cc-481e-8f07-7a46cc44a6d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX59-Multitenancy-Pull MEP-Basic flow-fs" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="2017d5d9-b61b-40bd-b5fd-8ed538a4d4f4"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Create general DB schemas.
- Configure Multitenancy for C2 and C3 (enable plugin security, create domain properties file, create domain schema ...)
- Domains "domibus_C2Dom1" and "domibus_C2Dom2" are configured for C2.
- Domains "domibus_C3Dom1" and "domibus_C3Dom2" are configured for C3.
- Create plugin users on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1", "userC1C2Dom2" linked to "originalSender" and domain "domibus_C2Dom2". 
- Create plugin users on C3: "userC4C3Dom1" linked to "originalSender" and domain "domibus_C3Dom1", "userC4C3Dom2" linked to "originalSender" and domain "domibus_C3Dom2".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (2,2).
- Certificate configured on domain "domibus_C2Dom1" is only present in the truststore of domain "domibus_C3Dom2".
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="bd2acbf7-48b0-4bfe-aec1-f62d503a65b3" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "2")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 2.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security" id="1f358657-0d1d-4030-a3f0-9ea1ff9efa95" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for both C2 and C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="93cb4a76-766f-4604-8731-71215090cb4d" disabled="true"><con:settings/><con:config><script>// Create users in C2
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create users in C3 
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom1","ROLE_USER","userC4C3Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
Domibus.addPluginUser("C3",context,log,"domibus_C3Dom2","ROLE_USER","userC4C3Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="6f4c114a-3d39-4204-abb9-1f6107754f60" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log,"domibus_C3Dom1")
Domibus.uploadPmode("C3","default","\\red\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-red.xml",context,log,"domibus_C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="123d6bed-3fed-4e6b-8737-0792117daae5" disabled="true"><con:settings/><con:config><script>// Upload truststores

// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","special","\\Threegateways\\blue\\gateway_truststore.jks",context,log,"domibus_C3Dom1")
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filters to FS" id="cbefc5d5-0a15-498d-add9-480c4e488a44" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendFSPlugin",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom1")
Domibus.setMessageFilters("C3","backendFSPlugin",context,log,"domibus_C3Dom2")
</script></con:config></con:testStep><con:testStep type="groovy" name="Submit Message" id="d3c92e18-b228-4ecd-b939-1d68a8e48b5d"><con:settings/><con:config><script>// Copy xml payload
def source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\pull\\Test_file.xml";
def dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\Test_file.xml"; 
Domibus.copyFile(source,dest,log)
// Copy pdf payload
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\pull\\fileSmall.pdf";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\fileSmall.pdf"; 
Domibus.copyFile(source,dest,log)
// Copy metadata file
source = context.expand('${projectDir}')+"\\resources\\PModesandKeystoresSpecialTests\\fsPlugin\\pull\\metadata.xml";
dest = context.expand('${#Project#pathBlue}')+"\\..\\fs_plugin_data\\domibus_C2Dom1\\OUT\\metadata.xml"; 
Domibus.copyFile(source,dest,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Test" id="035a2eae-55b2-4b2b-95d2-bd712e0d861c"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Check that the message is acknowledged.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="dbc48afd-92da-499c-94ab-36b67bbd9619" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom1")
Domibus.removePluginUser("C3",context,log,"domibus_C3Dom1","userC4C3Dom2");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="b4167628-c513-415d-86d3-4ce897a464a1" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX59-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e2907f6f-317e-42ec-a372-1212ba406c1c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DomX60-Multitenancy-Overwrite default properties" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Configuration" id="630e489d-1b9b-4d4f-aed4-0c1638096ee7"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Configure Multitenancy for C2 (enable plugin security, create domain properties file, create domain schema ...)
- Domain "domibus_C2Dom1" is configured for C2.
- Multitenany is not configured for C3.
- Create plugin authentication user on C2: "userC1C2Dom1" linked to "originalSender" and domain "domibus_C2Dom1". 
- Create plugin authentication user on C3: "userC4" linked to "finalRecipient".
- Set properties (multitenancyModeC2,multitenancyModeC3) to (1,0).
- Certificate configured in default domain is not present in the truststore of C3.
""", log, testRunner) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Configure multitenancy mode" id="a7513cdf-2b85-4714-8710-8c41dd28f616" disabled="true"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC2", "2")
testRunner.testCase.testSuite.project.setPropertyValue("multitenancyModeC3", "0")
log.info "multitenancyModeC2 custom property set to 2.";
log.info "multitenancyModeC3 custom property set to 0.";</script></con:config></con:testStep><con:testStep type="groovy" name="Enable plugin security-C2" id="1cb4a1d3-5b04-41d3-aae5-c78410a1a153" disabled="true"><con:settings/><con:config><script>// TODO: automate
Domibus.showPopUpForManualConfigurationChange("""\
Enable plugin security for C2.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Create plugin users" id="4a4bda39-25da-486a-b65f-6a87da78f0d3" disabled="true"><con:settings/><con:config><script>// Create userC1 in C2 ("Default" domain)
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom1","ROLE_USER","userC1C2Dom1","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
Domibus.addPluginUser("C2",context,log,"domibus_C2Dom2","ROLE_USER","userC1C2Dom2","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1")
// Create userC4 in C3 ("Default" domain)
Domibus.addPluginUser("C3",context,log,"Default","ROLE_USER","userC4","Domibus-123","urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4")
</script></con:config></con:testStep><con:testStep type="groovy" name="Upload PModes" id="fc80143b-b180-4662-8439-94405b222cae" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload pmodes C2 ================"
Domibus.uploadPmode("C2","default","\\blue\\domibus_C2Dom1ToC3Dom2\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom1")
Domibus.uploadPmode("C2","default","\\blue\\domibus-pmode-blue.xml",context,log,"domibus_C2Dom2")

// C3
log.info "================ Upload pmodes C3 ================"
Domibus.uploadPmode("C3","default","\\red\\domibus-pmode-red.xml",context,log);</script></con:config></con:testStep><con:testStep type="groovy" name="Upload Truststores" id="db01f1b4-f1b3-44ad-8f55-d13ca690d351" disabled="true"><con:settings/><con:config><script>// C2
log.info "================ Upload truststores C2 ================"
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom1")
Domibus.uploadTruststore("C2","default","\\blue\\gateway_truststore.jks",context,log,"domibus_C2Dom2")
// C3
log.info "================ Upload truststores C3 ================"
Domibus.uploadTruststore("C3","default","\\red\\gateway_truststore.jks",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Message Filter WS" id="5c8172cc-92f0-48ec-a8eb-706736c659de" disabled="true"><con:settings/><con:config><script>// Select message filters for C2
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom1")
Domibus.setMessageFilters("C2","backendWebservice",context,log,"domibus_C2Dom2")
// Select message filters for C3
Domibus.setMessageFilters("C3","backendWebservice",context,log)
</script></con:config></con:testStep><con:testStep type="groovy" name="Update property - test 1" id="ad6a6394-953b-4e84-9a8e-1de13e0c13c7"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- In file "domibus_C2Dom1-domibus.properties" set property "domibus.UI.title.name" to "New AC Title".
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Restart domibus C2 - test 1" id="48c82288-74fb-4925-8477-940c0c34666e"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Restart domibus C2.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Check Result - test 1" id="124d9175-b8f1-42c0-a40e-bd3accad9f6c"><con:settings/><con:config><script>Domibus.showPopUpForManualCheck("""\
- UI title takes the new value when domain "domibus_C2Dom1" is selected.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="delay" name="D1" id="9178ba1e-29bb-4a31-9e40-da5fc5fce944"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Update property - test 2" id="24f3565a-47fa-4508-b6cc-099298f19f94"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- In file "domibus_C3Dom2-domibus.properties" set property "domibus.msh.pull.cron" to a faster frequency than the default.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Restart domibus C3 - test 2" id="1bd41ddf-2d1c-4eaa-873f-bfbab6f53096"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Restart domibus C3.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Check Result - test 2" id="edde2287-75f6-46df-9e1f-03e895737599"><con:settings/><con:config><script>Domibus.showPopUpForManualCheck("""\
- Check that pull requests for domain "domibus_C3Dom2" occurs occording to the new set value.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="delay" name="D2" id="b88cb30e-5b37-4914-a515-5a02a28b229a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Update property - test 3" id="948e6729-9b6d-4051-b819-0f8e63aac7c7"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- In file "domibus_C2Dom1-domibus.properties" set property "domibus.proxy.enabled" to "true".
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Restart domibus C2 - test 3" id="f35fcfbf-47ef-4944-85da-ffe4e2f936fa"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Restart domibus C2.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Check Result - test 3" id="6b12ec2f-2702-4688-af82-5a4e3fd68b7f"><con:settings/><con:config><script>Domibus.showPopUpForManualCheck("""\
- Proxy is enabled for domain "domibus_C2Dom1".
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="delay" name="D3" id="68082271-4f5c-4825-abfe-ecd193ef24eb"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Update property - test 4" id="d2b452cd-78a8-4e5d-925f-4602e7cd7fb3"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- In file "domibus_C2Dom1-domibus.properties" set property "domibus.sendMessage.messageIdPattern" to "^[A-Z]*$".
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Restart domibus C2 - test 4" id="a494dc90-8572-41b5-88f8-1da475bc7173"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Restart domibus C2.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="request" id="337f91b0-ce4a-49e4-bbf8-630b904004e1" name="Check Result - test 4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Check Result - test 4" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX60-1-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc1">bdx:noprocess</ns:Service>
               <ns:Action>TC1Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="Not SOAP Fault Assertion" id="9bea8656-6d5d-48a9-8354-97360f0fddba" name="SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="delay" name="D4" id="47531730-019c-4ce9-ba82-74ded13dfe56"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Update property - test 5" id="0761fa3f-7d4b-4c76-a3fa-907e52f98fac"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- In file "domibus_C2Dom1-domibus.properties" set property "domibus.sender.trust.validation.onreceiving" to "true".
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="groovy" name="Restart domibus C2 - test 5" id="2b979dab-2d7c-4520-9926-e654cb31707c"><con:settings/><con:config><script>Domibus.showPopUpForManualConfigurationChange("""\
- Restart domibus C2.
""", log, testRunner) </script></con:config></con:testStep><con:testStep type="request" id="6537e38a-d2a7-4e30-8d6b-6d52c5013045" name="Check Result - test 5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BackendService_1_1SoapBinding</con:interface><con:operation>submitMessage</con:operation><con:request name="Check Result - test 5" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e022ccff-cc86-4b74-9723-3e474bc04cd9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#localUrl}/services/backend</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ns="http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/" xmlns:_1="http://org.ecodex.backend/1_1/" xmlns:xm="http://www.w3.org/2005/05/xmlmime">
   <soap:Header>
      <ns:Messaging>
         <ns:UserMessage>
            <ns:MessageInfo>
               <ns:MessageId>-DomX60-2-</ns:MessageId>
            </ns:MessageInfo>
            <ns:PartyInfo>
               <ns:From>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">white-blue</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</ns:Role>
               </ns:From>
               <ns:To>
                  <ns:PartyId type="urn:oasis:names:tc:ebcore:partyid-type:unregistered">domibus-red</ns:PartyId>
                  <ns:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</ns:Role>
               </ns:To>
            </ns:PartyInfo>
            <ns:CollaborationInfo>
               <ns:Service type="tc10">bdx:noprocess</ns:Service>
               <ns:Action>TC10Leg1</ns:Action>
            </ns:CollaborationInfo>
            <ns:MessageProperties>
               <ns:Property name="originalSender">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C1</ns:Property>
               <ns:Property name="finalRecipient">urn:oasis:names:tc:ebcore:partyid-type:unregistered:C4</ns:Property>
            </ns:MessageProperties>
            <ns:PayloadInfo>
               <ns:PartInfo href="cid:message">
                  <ns:PartProperties>
                     <ns:Property name="MimeType">text/xml</ns:Property>
                  </ns:PartProperties>
               </ns:PartInfo>
            </ns:PayloadInfo>
         </ns:UserMessage>
      </ns:Messaging>
   </soap:Header>
   <soap:Body>
      <_1:submitRequest>
         <payload payloadId="cid:message">
            <value>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGhlbGxvPndvcmxkPC9oZWxsbz4=</value>
         </payload>
      </_1:submitRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="55691702-a96e-4270-b659-69659336509f" name="SOAP Response"/><con:assertion type="Not SOAP Fault Assertion" id="9bea8656-6d5d-48a9-8354-97360f0fddba" name="SOAP Fault"/><con:credentials><con:username>userC1C2Dom1</con:username><con:password>Domibus-123</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://org.ecodex.backend/1_1/BackendInterface/submitMessage"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Delete plugin users" id="dc01cd0d-298e-45c8-bae4-273eb8662d7c" disabled="true"><con:settings/><con:config><script>// Remove users in C2
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom1","userC1C2Dom1")
Domibus.removePluginUser("C2",context,log,"domibus_C2Dom2","userC1C2Dom2")
// Remove users in C3
Domibus.removePluginUser("C3",context,log,"Default","userC4");</script></con:config></con:testStep><con:testStep type="groovy" name="Delete Message" id="55fc2258-e04a-46a1-b547-9728d6442e3f" disabled="true"><con:settings/><con:config><script>def test = new Domibus(log,null,context)
test.cleanDBMessageIDStartsWith(context.expand('-DomX60-'))
test.finalize()	
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:requirements/><con:properties><con:property><con:name>localUrl</con:name><con:value>http://localhost:8280/domibus</con:value></con:property><con:property><con:name>pathExeSender</con:name><con:value>${#Project#pathBlue}bin/</con:value></con:property><con:property><con:name>pathBlue</con:name><con:value>C:/ec/blue/domibus/</con:value></con:property><con:property><con:name>remoteUrl</con:name><con:value>http://localhost:8180/domibus</con:value></con:property><con:property><con:name>pathExeReceiver</con:name><con:value>${#Project#pathRed}bin/</con:value></con:property><con:property><con:name>pathRed</con:name><con:value>C:/ec/red/domibus/</con:value></con:property><con:property><con:name>greenUrl</con:name><con:value>http://localhost:8280/domibus</con:value></con:property><con:property><con:name>pathExeGreen</con:name><con:value>${#Project#pathGreen}/bin/</con:value></con:property><con:property><con:name>thirdGateway</con:name><con:value>false</con:value></con:property><con:property><con:name>reportFilePath</con:name><con:value>${projectDir}\\reports\\Domibus_SoapUI_report.csv</con:value></con:property><con:property><con:name>updateReport</con:name><con:value>true</con:value></con:property><con:property><con:name>pathGreen</con:name><con:value>C:/domibus/greenReceiver/domibus/</con:value></con:property><con:property><con:name>pdfAttachment</con:name><con:value>${projectDir}\\resources\\fileSmall.pdf </con:value></con:property><con:property><con:name>specialPModesPath</con:name><con:value>${projectDir}\\resources\\PModesandKeystoresSpecialTests</con:value></con:property><con:property><con:name>defaultPModesPath</con:name><con:value>${projectDir}\\resources\\PModesandKeystoresDefault</con:value></con:property><con:property><con:name>testEnvUrl</con:name><con:value>http://104.40.147.186:7005/domibus</con:value></con:property><con:property><con:name>moreThan100mbAttachment</con:name><con:value>${projectDir}\\resources\\videoplayback_mp4.pdf</con:value></con:property><con:property><con:name>subPathToDomibusProperties</con:name><con:value>conf/domibus/domibus.properties</con:value></con:property><con:property><con:name>allDomainsProperties</con:name><con:value>{"C2Default":{"site":"C2","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_blue","dbUser":"root","dbPassword":"root"},  "C3Default":{"site":"C3","domainName":"default","domNo":0,"dbType":"mysql","dbDriver":"com.mysql.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_red","dbUser":"root","dbPassword":"root"}, "C2Dom1":{"site":"C2","domainName":"domibus_C2Dom1","domNo":1,"dbType":"mysql","dbDriver":"com.mysql.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom1","dbUser":"root","dbPassword":"root"}, "C2Dom2":{"site":"C2","domainName":"domibus_C2Dom2","domNo":2,"dbType":"mysql","dbDriver":"com.mysql.jdbc.Driver","dbJdbcUrl":"jdbc:mysql://localhost:3306/domibus_c2dom2","dbUser":"root","dbPassword":"root"}}bc:oracle:thin:@localhost:1522/ORCL","dbUser":"domibus_red","dbPassword":"domibus_red"}}</con:value></con:property><con:property><con:name>multitenancyModeC2</con:name><con:value>0</con:value></con:property><con:property><con:name>multitenancyModeC3</con:name><con:value>0</con:value></con:property><con:property><con:name>defaultBlueDomainID</con:name><con:value>C2Default</con:value></con:property><con:property><con:name>defaultRedDomainId</con:name><con:value>C3Default</con:value></con:property><con:property><con:name>defaultGreenDomainID</con:name><con:value>thirdDefault</con:value></con:property><con:property><con:name>adminDefaultPassword</con:name><con:value>Domibus-123</con:value></con:property><con:property><con:name>pluginAdminC2Default</con:name><con:value>pa_c2dom1</con:value></con:property><con:property><con:name>unsecureLoginAllowed</con:name><con:value>false</con:value></con:property><con:property><con:name>pluginAdminC3Default</con:name><con:value>pa_c3dom1</con:value></con:property><con:property><con:name>allJMSDomainsProperties</con:name><con:value>{"C2Default":{"site":"C2","jmsClientType":"tomcat","jmsUrl":"tcp://localhost:61616","jmsServerUsername":"domibus","jmsServerPassword":"changeit","jmsPluginUsername":"","jmsPluginPassword":"","jmsQueue":"domibus.backend.jms.inQueue","jmsConnectionFactoryJNDI":"jms/RemoteConnectionFactory"},"C3Default":{"site":"C3","jmsClientType":"tomcat","jmsUrl":"tcp://localhost:61716","jmsServerUsername":"domibus","jmsServerPassword":"changeit","jmsPluginUsername":"","jmsPluginPassword":"","jmsQueue":"domibus.backend.jms.inQueue","jmsConnectionFactoryJNDI":"jms/RemoteConnectionFactory"}}</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>