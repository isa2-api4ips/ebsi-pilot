/*
 * DID API
 * DID API is a Core Service of the EBSI platform providing the capability of resolving EBSI Decentralized Identifiers (DIDs). 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.europa.ec.edelivery.ebsi.did.entities;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;


/**
 * A network address at which a service operates on behalf of a DID subject.
 */

@JsonPropertyOrder({
  ServiceEndpoint.JSON_PROPERTY_ID,
  ServiceEndpoint.JSON_PROPERTY_TYPE,
  ServiceEndpoint.JSON_PROPERTY_SERVICE_ENDPOINT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-15T09:23:15.999421+01:00[Europe/Brussels]")
public class ServiceEndpoint {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_SERVICE_ENDPOINT = "serviceEndpoint";
  private String serviceEndpoint = null;


  public ServiceEndpoint id(String id) {
    this.id = id;
    return this;
  }

   /**
   * URI identifying the service
   * @return id
  **/
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ServiceEndpoint type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Service type
   * @return type
  **/
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ServiceEndpoint serviceEndpoint(String serviceEndpoint) {
    this.serviceEndpoint = serviceEndpoint;
    return this;
  }

   /**
   * Service endpoint. It is a JSON-LD object or a valid URI
   * @return serviceEndpoint
  **/

  @JsonProperty(JSON_PROPERTY_SERVICE_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceEndpoint() {
    return serviceEndpoint;
  }


  public void setServiceEndpoint(String serviceEndpoint) {
    this.serviceEndpoint = serviceEndpoint;
  }


  /**
   * Return true if this serviceEndpoint object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceEndpoint serviceEndpoint = (ServiceEndpoint) o;
    return Objects.equals(this.id, serviceEndpoint.id) &&
        Objects.equals(this.type, serviceEndpoint.type) &&
        Objects.equals(this.serviceEndpoint, serviceEndpoint.serviceEndpoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, serviceEndpoint);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceEndpoint {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    serviceEndpoint: ").append(toIndentedString(serviceEndpoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

